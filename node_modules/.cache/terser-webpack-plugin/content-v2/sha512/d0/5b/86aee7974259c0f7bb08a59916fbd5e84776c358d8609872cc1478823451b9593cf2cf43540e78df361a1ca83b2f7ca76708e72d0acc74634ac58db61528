{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{222:function(t,e,s){t.exports=s.p+\"assets/img/1557937027532.d3769846.png\"},223:function(t,e,s){t.exports=s.p+\"assets/img/1557937108763.b7394dfa.png\"},224:function(t,e,s){t.exports=s.p+\"assets/img/1557937125803.bfb166fc.png\"},225:function(t,e,s){t.exports=s.p+\"assets/img/1557937193176.957f4319.png\"},226:function(t,e,s){t.exports=s.p+\"assets/img/1557937222262.0da7e79b.png\"},227:function(t,e,s){t.exports=s.p+\"assets/img/1557937267508.9e1dda4d.png\"},228:function(t,e,s){t.exports=s.p+\"assets/img/1557937289227.ae7682d7.png\"},229:function(t,e,s){t.exports=s.p+\"assets/img/1557937326137.a1e8e897.png\"},230:function(t,e,s){t.exports=s.p+\"assets/img/1557937379499.70725b34.png\"},231:function(t,e,s){t.exports=s.p+\"assets/img/1557937418803.1f2ecb20.png\"},232:function(t,e,s){t.exports=s.p+\"assets/img/1557937450309.62d94258.png\"},291:function(t,e,s){\"use strict\";s.r(e);var i=[function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"ul\",[s(\"li\",[t._v(\"查找浏览器缓存\")]),t._v(\" \"),s(\"li\",[t._v(\"DNS 解析:将域名解析成 IP 地址\")]),t._v(\" \"),s(\"li\",[t._v(\"TCP 连接：TCP 三次握手\")]),t._v(\" \"),s(\"li\",[t._v(\"发送 HTTP 请求\")]),t._v(\" \"),s(\"li\",[t._v(\"服务器处理请求并返回 HTTP 报文\")]),t._v(\" \"),s(\"li\",[t._v(\"浏览器解析渲染页面\")]),t._v(\" \"),s(\"li\",[t._v(\"断开连接：TCP 四次挥手\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h2\",{attrs:{id:\"一、什么是url？\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一、什么是url？\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 一、什么是URL？\")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"div\",{staticClass:\"tip custom-block\"},[s(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"TIP\")]),t._v(\" \"),s(\"p\",[t._v(\"scheme: // host.domain:port / path / filename ? abc = 123 # 456789\")]),t._v(\" \"),s(\"p\",[t._v(\"scheme      - 定义因特网服务的类型。常见的协议有 http、https、ftp、file，其中最常见的类型是 http，而 https 则是进行加密的网络传输。\")]),t._v(\" \"),s(\"p\",[t._v(\"host            - 定义域主机（http 的默认主机是 www）\")]),t._v(\" \"),s(\"p\",[t._v(\"domain       - 定义因特网域名，比如 baidu.com\")]),t._v(\" \"),s(\"p\",[t._v(\"port        \\t - 定义主机上的端口号（http 的默认端口号是 80）\")]),t._v(\" \"),s(\"p\",[t._v(\"path        \\t - 定义服务器上的路径（如果省略，则文档必须位于网站的根目录中）。\")]),t._v(\" \"),s(\"p\",[t._v(\"filename     \\t- 定义文档/资源的名称\")]),t._v(\" \"),s(\"p\",[t._v(\"query       \\t - 即查询参数\")]),t._v(\" \"),s(\"p\",[t._v(\"fragment   \\t  \\t- 即 # 后的hash值，一般用来定位到某个位置\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h2\",{attrs:{id:\"二、dns域名解析\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二、dns域名解析\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 二、DNS域名解析\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"div\",{staticClass:\"tip custom-block\"},[e(\"p\",{staticClass:\"custom-block-title\"},[this._v(\"IP地址\")]),this._v(\" \"),e(\"p\",[this._v(\"IP 地址是指互联网协议地址，是 IP Address 的缩写。IP 地址是 IP 协议提供的一种统一的地址格式，\\n它为互联网上的每一个网络和每一台主机分配一个逻辑地址，以此来屏蔽物理地址的差异。\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"div\",{staticClass:\"tip custom-block\"},[e(\"p\",{staticClass:\"custom-block-title\"},[this._v(\"什么是域名解析\")]),this._v(\" \"),e(\"p\",[this._v(\"DNS 协议提供通过域名查找 IP 地址，或逆向从 IP 地址反查域名的服务。\\nDNS 是一个网络服务器，我们的域名解析简单来说就是在 DNS 上记录一条信息记录。\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"div\",{staticClass:\"tip custom-block\"},[e(\"p\",{staticClass:\"custom-block-title\"},[this._v(\"浏览器如何通过域名去查询 URL 对应的 IP 呢？\")]),this._v(\" \"),e(\"p\",[this._v(\"DNS域名解析分为递归查询和迭代查询两种方式，现一般为迭代查询。\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"img\",{attrs:{src:s(222),alt:\"1557937027532\"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"dns的优化与应用\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#dns的优化与应用\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" DNS的优化与应用\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"ol\",[e(\"li\",[this._v(\"DNS缓存 \"),e(\"code\",[this._v(\"DNS存在着多级缓存，从离浏览器的距离排序的话，有以下几种: 浏览器缓存，系统缓存，路由器缓存，IPS服务器缓存，根域名服务器缓存，顶级域名服务器缓存，主域名服务器缓存。\")])]),this._v(\" \"),e(\"li\",[this._v(\"DNS负载均衡\"),e(\"code\",[this._v(\"(DNS重定向) DNS负载均衡技术的实现原理是在DNS服务器中为同一个主机名配置多个IP地址，在应答DNS查询时， DNS服务器对每个查询将以DNS文件中主机记录的IP地址按顺序返回不同的解析结果，将客户端的访问 引导到不同的机器上去，使得不同的客户端访问不同的服务器，从而达到负载均衡的目的。\")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"ul\",[e(\"li\",[this._v(\"大家耳熟能详的CDN(Content Delivery Network)就是利用DNS的重定向技术，DNS服务器会返回一个跟 用户最接近的点的IP地址给用户，CDN节点的服务器负责响应用户的请求，提供所需的内容。\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"ol\",[e(\"li\",[this._v(\"dns-prefetch \"),e(\"code\",[this._v(\"DNS Prefetch 是一种 DNS 预解析技术。当你浏览网页时，浏览器会在加载网页时对网页中的域名进行解析缓存，这样在你单击当前网页中的连接时就无需进行 DNS 的解析，减少用户等待时间，提高用户体验。\")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"osi参考模型与tcp-ip四层模型\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#osi参考模型与tcp-ip四层模型\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" OSI参考模型与TCP/IP四层模型\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"img\",{attrs:{src:s(223),alt:\"1557937108763\"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h2\",{attrs:{id:\"三、tcp三次握手\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#三、tcp三次握手\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 三、TCP三次握手\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"img\",{attrs:{src:s(224),alt:\"1557937125803\"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"ul\",[s(\"li\",[t._v(\"客户端发送一个带 SYN=1，seq=X 的数据包到服务器端口\"),s(\"code\",[t._v(\"（第一次握手，由浏览器发起，告诉服务器我要发送请求了）\")])]),t._v(\" \"),s(\"li\",[t._v(\"服务器发回一个带 SYN=1， ACK=X+1， seq=Y 的响应包以示传达确认信息\"),s(\"code\",[t._v(\"（第二次握手，由服务器发起，告诉浏览器我准备接受了，你赶紧发送吧）\")])]),t._v(\" \"),s(\"li\",[t._v(\"客户端再回传一个带 ACK=Y+1， seq=Z 的数据包，代表“握手结束”\"),s(\"code\",[t._v(\"（第三次握手，由浏览器发送，告诉服务器，我马上就发了，准备接受吧）\")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h2\",{attrs:{id:\"四、发送-http-请求\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#四、发送-http-请求\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 四、发送 HTTP 请求\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h2\",{attrs:{id:\"五、服务器处理请求并返回-http-报文\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#五、服务器处理请求并返回-http-报文\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 五、服务器处理请求并返回 HTTP 报文\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"div\",{staticClass:\"tip custom-block\"},[e(\"p\",{staticClass:\"custom-block-title\"},[this._v(\"TIP\")]),this._v(\" \"),e(\"p\",[this._v(\"假装我是一个传统的MVC模型，RD同学请无视\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"img\",{attrs:{src:s(225),alt:\"1557937193176\"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h2\",{attrs:{id:\"六、浏览器解析渲染页面\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#六、浏览器解析渲染页面\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 六、浏览器解析渲染页面\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h3\",{attrs:{id:\"浏览器的主要构成\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#浏览器的主要构成\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 浏览器的主要构成\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"img\",{attrs:{src:s(226),alt:\"1557937222262\"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"div\",{staticClass:\"tip custom-block\"},[s(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"TIP\")]),t._v(\" \"),s(\"p\",[t._v(\"用户界面    (User Interface)    － 包括地址栏、后退/前进按钮、书签目录等，也就是你所看到的除了用来显示你所请求页面的主窗口之外的其他部分\")]),t._v(\" \"),s(\"p\",[t._v(\"浏览器引擎  (Browser Engine)    － 用来查询及操作渲染引擎的接口\")]),t._v(\" \"),s(\"p\",[t._v(\"渲染引擎    (Rendering Engine)  － 用来显示请求的内容，例如，如果请求内容为html，它负责解析html及css，并将解析后的结果显示出来\")]),t._v(\" \"),s(\"p\",[t._v(\"网络        (Networking)        － 用来完成网络调用，例如http请求，它具有平台无关的接口，可以在不同平台上工作\")]),t._v(\" \"),s(\"p\",[t._v(\"JS解释器    (JS Interpreter)    － 用来解释执行JS代码\")]),t._v(\" \"),s(\"p\",[t._v(\"UI后端      (UI Backend)        － 用来绘制类似组合选择框及对话框等基本组件，具有不特定于某个平台的通用接口，底层使用操作系统的用户接口\")]),t._v(\" \"),s(\"p\",[t._v(\"数据存储    (DB Persistence)    － 属于持久层，浏览器需要在硬盘中保存类似cookie的各种数据，HTML5定义了web database技术，这是一种轻量级完整的客户端存储技术\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"_1-多进程的浏览器\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-多进程的浏览器\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 1.多进程的浏览器\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"ul\",[e(\"li\",[this._v(\"Browser进程：浏览器的主进程（负责协调、主控），只有一个\")]),this._v(\" \"),e(\"li\",[this._v(\"第三方插件进程：每种类型的插件对应一个进程，仅当使用该插件时才创建\")]),this._v(\" \"),e(\"li\",[this._v(\"GPU进程：最多一个，用于3D绘制\")]),this._v(\" \"),e(\"li\",[this._v(\"浏览器渲染进程（内核）：默认每个Tab页面一个进程，互不影响，控制页面渲染，脚本执行，事件处理等（有时候会优化，如多个空白tab会合并成一个进程）\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"_2-多线程的浏览器内核\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-多线程的浏览器内核\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 2.多线程的浏览器内核\")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"ol\",[s(\"li\",[t._v(\"GUI线程\")]),t._v(\" \"),s(\"li\",[t._v(\"JS引擎线程\")]),t._v(\" \"),s(\"li\",[t._v(\"事件触发线程\")]),t._v(\" \"),s(\"li\",[t._v(\"定时器线程\")]),t._v(\" \"),s(\"li\",[t._v(\"网络请求线程\")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"div\",{staticClass:\"tip custom-block\"},[s(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"浏览器内核拿到内容后，渲染步骤大致可以分为以下几步：\")]),t._v(\" \"),s(\"ol\",[s(\"li\",[s(\"p\",[t._v(\"解析HTML，构建DOM树\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"解析CSS，生成CSS规则树\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"合并DOM树和CSS规则，生成render树\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"布局render树（Layout/reflow），负责各元素尺寸、位置的计算\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"绘制render树（paint），绘制页面像素信息\")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"strong\",[this._v(\"以webkit内核为例\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"img\",{attrs:{src:s(227),alt:\"1557937267508\"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"_1-html解析，构建dom\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-html解析，构建dom\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 1. HTML解析，构建DOM\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"div\",{staticClass:\"tip custom-block\"},[e(\"p\",{staticClass:\"custom-block-title\"},[this._v(\"过程\")]),this._v(\" \"),e(\"p\",[this._v(\"Bytes → characters → tokens → nodes → DOM\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"img\",{attrs:{src:s(228),alt:\"1557937289227\"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"div\",{staticClass:\"tip custom-block\"},[s(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"其中比较关键的几个步骤\")]),t._v(\" \"),s(\"ol\",[s(\"li\",[s(\"p\",[t._v(\"Conversion转换：浏览器将获得的HTML内容（Bytes）基于他的编码转换为单个字符\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"Tokenizing分词：浏览器按照HTML规范标准将这些字符转换为不同的标记token。每个token都有自己独特的含义以及规则集\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"Lexing词法分析：分词的结果是得到一堆的token，此时把他们转换为对象，这些对象分别定义他们的属性和规则\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"DOM构建：因为HTML标记定义的就是不同标签之间的关系，这个关系就像是一个树形结构一样\\n例如：body对象的父节点就是HTML对象，然后段略p对象的父节点就是body对象\")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"_2-解析css，生成css规则树\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-解析css，生成css规则树\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 2. 解析CSS，生成CSS规则树\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"div\",{staticClass:\"tip custom-block\"},[e(\"p\",{staticClass:\"custom-block-title\"},[this._v(\"同理，CSS规则树的生成也是类似。\")]),this._v(\" \"),e(\"p\",[this._v(\"Bytes → characters → tokens → nodes → CSSOM\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"img\",{attrs:{src:s(229),alt:\"1557937326137\"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"_3-合并dom树和css规则，生成render树\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-合并dom树和css规则，生成render树\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 3. 合并DOM树和CSS规则，生成render树\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"img\",{attrs:{src:s(230),alt:\"1557937379499\"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"_4-布局render树（layout-reflow），负责各元素尺寸、位置的计算\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-布局render树（layout-reflow），负责各元素尺寸、位置的计算\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 4. 布局render树（Layout/Reflow），负责各元素尺寸、位置的计算\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h4\",{attrs:{id:\"_5-绘制render树（paint），绘制页面像素信息\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-绘制render树（paint），绘制页面像素信息\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 5. 绘制render树（Paint），绘制页面像素信息\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"img\",{attrs:{src:s(231),alt:\"1557937418803\"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"div\",{staticClass:\"tip custom-block\"},[s(\"p\",{staticClass:\"custom-block-title\"},[t._v(\"这张图片中重要的四个步骤\")]),t._v(\" \"),s(\"ol\",[s(\"li\",[s(\"p\",[t._v(\"计算CSS样式\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"构建渲染树\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"布局，主要定位坐标和大小，是否换行，各种position overflow z-index属性\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"绘制，将图像绘制出来\")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"ul\",[e(\"li\",[this._v(\"Layout，也称为Reflow，即回流。一般意味着元素的内容、结构、位置或尺寸发生了变化，需要重新计算样式和渲染树\")]),this._v(\" \"),e(\"li\",[this._v(\"Repaint，即重绘。意味着元素发生的改变只是影响了元素的一些外观之类的时候（例如，背景色，边框颜色，文字颜色等），此时只需要应用新样式绘制这个元素就可以了\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h2\",{attrs:{id:\"七、断开连接\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#七、断开连接\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 七、断开连接\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"p\",[e(\"img\",{attrs:{src:s(232),alt:\"1557937450309\"}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"ul\",[s(\"li\",[t._v(\"发起方向被动方发送报文，Fin、Ack、seq，表示已经没有数据传输了。并进入 FIN_WAIT_1 状态。 \"),s(\"code\",[t._v(\"(第一次挥手：由浏览器发起的，发送给服务器，我请求报文发送完了，你准备关闭吧)\")])]),t._v(\" \"),s(\"li\",[t._v(\"被动方发送报文，Ack、seq，表示同意关闭请求。此时主机发起方进入 FIN_WAIT_2 状态。 \"),s(\"code\",[t._v(\"(第二次挥手：由服务器发起的，告诉浏览器，我请求报文接受完了，我准备关闭了，你也准备吧)\")])]),t._v(\" \"),s(\"li\",[t._v(\"被动方向发起方发送报文段，Fin、Ack、seq，请求关闭连接。并进入 LAST_ACK 状态。 \"),s(\"code\",[t._v(\"(第三次挥手：由服务器发起，告诉浏览器，我响应报文发送完了，你准备关闭吧)\")])]),t._v(\" \"),s(\"li\",[t._v(\"发起方向被动方发送报文段，Ack、seq。然后进入等待 TIME_WAIT 状态。被动方收到发起方的报文段以后关闭连接。发起方等待一定时间未收到回复，则正常关闭。 \"),s(\"code\",[t._v(\"(第四次挥手：由浏览器发起，告诉服务器，我响应报文接受完了，我准备关闭了，你也准备吧)\")])])])}],_=s(0),r=Object(_.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s(\"div\",{staticClass:\"content\"},[s(\"p\",[t._v(\"从开发&运维角度方面来看，总体来说分为以下几个过程\")]),t._v(\" \"),t._m(0),t._v(\" \"),t._m(1),t._v(\" \"),s(\"p\",[t._v(\"URL（Uniform Resource Locator），统一资源定位符，用于定位互联网上资源，俗称网址。\")]),t._v(\" \"),t._m(2),t._v(\" \"),t._m(3),t._v(\" \"),s(\"p\",[t._v(\"在浏览器输入网址后，首先要经过域名解析，因为浏览器并不能直接通过域名找到对应的服务器，而是要通过 IP 地址。\")]),t._v(\" \"),t._m(4),t._v(\" \"),t._m(5),t._v(\" \"),t._m(6),t._v(\" \"),t._m(7),t._v(\" \"),t._m(8),t._v(\" \"),t._m(9),t._v(\" \"),t._m(10),t._v(\" \"),t._m(11),t._v(\" \"),t._m(12),t._v(\" \"),t._m(13),t._v(\" \"),t._m(14),t._v(\" \"),t._m(15),t._v(\" \"),t._m(16),t._v(\" \"),t._m(17),t._v(\" \"),s(\"p\",[t._v(\"TCP 三次握手结束后，开始发送 HTTP 请求报文。\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"为避免篇幅过长，http协议、缓存等相关内容请参阅：\")]),t._v(\" \"),s(\"a\",{attrs:{href:\"https://juejin.im/post/5c808d4bf265da2de33f4e5f\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"从HTTP到WEB缓存\"),s(\"OutboundLink\")],1)]),t._v(\" \"),t._m(18),t._v(\" \"),s(\"p\",[t._v(\"每台服务器上都会安装处理请求的应用——Web server。常见的web server产品有apache、nginx、IIS、Lighttpd等。\")]),t._v(\" \"),t._m(19),t._v(\" \"),t._m(20),t._v(\" \"),t._m(21),t._v(\" \"),t._m(22),t._v(\" \"),t._m(23),t._v(\" \"),t._m(24),t._v(\" \"),t._m(25),t._v(\" \"),s(\"p\",[t._v(\"浏览器是多进程的，有一个主控进程，以及每一个tab页面都会新开一个进程（某些情况下多个tab会合并进程）\")]),t._v(\" \"),s(\"p\",[t._v(\"进程可能包括主控进程，插件进程，GPU，tab页（浏览器内核）等等\")]),t._v(\" \"),t._m(26),t._v(\" \"),t._m(27),t._v(\" \"),s(\"p\",[t._v(\"每一个tab页面可以看作是浏览器内核进程，然后这个进程是多线程的，它有几大类子线程：\")]),t._v(\" \"),t._m(28),t._v(\" \"),t._m(29),t._v(\" \"),t._m(30),t._v(\" \"),t._m(31),t._v(\" \"),t._m(32),t._v(\" \"),s(\"p\",[t._v(\"简单的理解，这一步的流程是这样的：浏览器解析HTML，构建DOM树。 解析HTML到构建出DOM当然过程可以简述如下：\")]),t._v(\" \"),t._m(33),t._v(\" \"),t._m(34),t._v(\" \"),t._m(35),t._v(\" \"),t._m(36),t._v(\" \"),t._m(37),t._v(\" \"),t._m(38),t._v(\" \"),t._m(39),t._v(\" \"),s(\"p\",[t._v(\"当DOM树和CSSOM都有了后，就要开始构建渲染树了\")]),t._v(\" \"),s(\"p\",[t._v(\"一般来说，渲染树和DOM树相对应的，但不是严格意义上的一一对应,因为有一些不可见的DOM元素不会插入到渲染树中，如head这种不可见的标签或者display: none等\")]),t._v(\" \"),t._m(40),t._v(\" \"),t._m(41),t._v(\" \"),s(\"p\",[t._v(\"布局：通过渲染树中渲染对象的信息，计算出每一个渲染对象的位置和尺寸。\")]),t._v(\" \"),t._m(42),t._v(\" \"),s(\"p\",[t._v(\"绘制阶段，系统会遍历呈现树，并调用呈现器的“paint”方法，将呈现器的内容显示在屏幕上。\")]),t._v(\" \"),t._m(43),t._v(\" \"),t._m(44),t._v(\" \"),t._m(45),t._v(\" \"),t._m(46),t._v(\" \"),s(\"p\",[t._v(\"当数据传送完毕，需要断开 tcp 连接，此时发起 tcp 四次挥手。\")]),t._v(\" \"),t._m(47),t._v(\" \"),t._m(48),t._v(\" \"),s(\"p\",[t._v(\"作者：WilliamCao\")]),t._v(\" \"),s(\"p\",[t._v(\"链接：https://juejin.im/post/5c7646f26fb9a049fd108380\")]),t._v(\" \"),s(\"p\",[t._v(\"来源：掘金\")]),t._v(\" \"),s(\"p\",[t._v(\"著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。\")])])},i,!1,null,null,null);e.default=r.exports}}]);","extractedComments":[]}