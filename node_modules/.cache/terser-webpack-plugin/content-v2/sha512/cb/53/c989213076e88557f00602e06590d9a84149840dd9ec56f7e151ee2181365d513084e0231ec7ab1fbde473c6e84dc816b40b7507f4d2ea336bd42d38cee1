{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{354:function(s,t,a){s.exports=a.p+\"assets/img/1571387331363.c8658e10.png\"},355:function(s,t,a){s.exports=a.p+\"assets/img/1571401546493.ad59c29d.png\"},808:function(s,t,a){\"use strict\";a.r(t);var n=a(0),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[n(\"h2\",{attrs:{id:\"nan-是一个-number-类型\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#nan-是一个-number-类型\"}},[s._v(\"#\")]),s._v(\" NaN 是一个 number 类型\")]),s._v(\" \"),n(\"p\",[n(\"code\",[s._v(\"NaN\")]),s._v(\"是一个 \"),n(\"code\",[s._v(\"number\")]),s._v(\" 类型。而且， \"),n(\"code\",[s._v(\"NaN\")]),s._v(\" 不等于它自己。实际上 \"),n(\"code\",[s._v(\"NaN\")]),s._v(\"不等于任何东西，验证一个变量是否是 \"),n(\"code\",[s._v(\"NaN\")]),s._v(\" 可以使用 \"),n(\"code\",[s._v(\"isNaN()\")]),s._v(\" 方法来判断。\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"typeof\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"NaN\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"number\"')]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"NaN\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"===\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"NaN\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"false\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"null-是一个对象\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#null-是一个对象\"}},[s._v(\"#\")]),s._v(\" null 是一个对象\")]),s._v(\" \"),n(\"p\",[n(\"code\",[s._v(\"null\")]),s._v(\"是一个对象。听起来奇怪！对？但这是事实。\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"typeof\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"object\"')]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\")])]),n(\"p\",[s._v(\"在这种情况下， \"),n(\"code\",[s._v(\"null\")]),s._v(\"表示没有值。因此， \"),n(\"code\",[s._v(\"null\")]),s._v(\"不应该是 \"),n(\"code\",[s._v(\"Object\")]),s._v(\"的实例。\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"instanceof\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Object\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"false\")]),s._v(\"  \\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"undefined-可以被定义\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#undefined-可以被定义\"}},[s._v(\"#\")]),s._v(\" undefined 可以被定义\")]),s._v(\" \"),n(\"p\",[s._v(\"undefined\"),n(\"code\",[s._v(\"不是 JS 中的保留关键字， 你可以为其指定值也不会报错，如果声明一个变量没有赋值，默认为\")]),s._v(\"undefined\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"var\")]),s._v(\" some_var\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"undefined\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" some_var \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"==\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"undefined\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"true\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"undefined\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'i am undefined'\")]),s._v(\"  \\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"_0-1-0-2-不等于-to-0-3\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_0-1-0-2-不等于-to-0-3\"}},[s._v(\"#\")]),s._v(\" 0.1 + 0.2 不等于 to 0.3\")]),s._v(\" \"),n(\"p\",[s._v(\"在JavaScript中， \"),n(\"code\",[s._v(\"0.1+0.2==0.3\")]),s._v(\"返回 \"),n(\"code\",[s._v(\"false\")]),s._v(\"。事实是，javascript 将浮点数存储为二进制。\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0.1\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0.20\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\".30000000000000004\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0.1\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0.2\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"==\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0.3\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"false\")]),s._v(\"   \\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"math-max-比-math-min-小\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#math-max-比-math-min-小\"}},[s._v(\"#\")]),s._v(\" Math.max() 比 Math.min() 小\")]),s._v(\" \"),n(\"p\",[n(\"code\",[s._v(\"Math.max()>Math.min()\")]),s._v(\"返回 \"),n(\"code\",[s._v(\"false\")]),s._v(\"的事实看起来是错误的，但实际上它是正确的。\")]),s._v(\" \"),n(\"p\",[s._v(\"如果没有参数传给 \"),n(\"code\",[s._v(\"min()\")]),s._v(\"或 \"),n(\"code\",[s._v(\"max()\")]),s._v(\"，那么它将返回以下值。\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" Math\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"max\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"Infinity\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" Math\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"min\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"Infinity\")]),s._v(\"    \\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"_018-045-19\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_018-045-19\"}},[s._v(\"#\")]),s._v(\" 018 - 045 = -19\")]),s._v(\" \"),n(\"p\",[s._v(\"在JavaScript中，前缀 \"),n(\"code\",[s._v(\"0\")]),s._v(\"会把任何数字转换成八进制。但是，八进制中不使用 \"),n(\"code\",[s._v(\"8\")]),s._v(\"，任何包含 \"),n(\"code\",[s._v(\"8\")]),s._v(\"的数字都将被无声地转换为常规的十进制数字。\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"018\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"045\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"19\")]),s._v(\"    \\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\")])]),n(\"p\",[s._v(\"因此， \"),n(\"code\",[s._v(\"018-017\")]),s._v(\"实际上等于十进制表达式 \"),n(\"code\",[s._v(\"18-37\")]),s._v(\"，因为 \"),n(\"code\",[s._v(\"045\")]),s._v(\"是八进制，但 \"),n(\"code\",[s._v(\"018\")]),s._v(\"是十进制。\")]),s._v(\" \"),n(\"h2\",{attrs:{id:\"括号的位置问题\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#括号的位置问题\"}},[s._v(\"#\")]),s._v(\" 括号的位置问题\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token template-string\"}},[n(\"span\",{pre:!0,attrs:{class:\"token template-punctuation string\"}},[s._v(\"`\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"return\")]),n(\"span\",{pre:!0,attrs:{class:\"token template-punctuation string\"}},[s._v(\"`\")])]),s._v(\" 语句后面没有东西的时候它什么都不返回。实际上，\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"JS\")]),s._v(\" 后面 \"),n(\"span\",{pre:!0,attrs:{class:\"token template-string\"}},[n(\"span\",{pre:!0,attrs:{class:\"token template-punctuation string\"}},[s._v(\"`\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"return\")]),n(\"span\",{pre:!0,attrs:{class:\"token template-punctuation string\"}},[s._v(\"`\")])]),s._v(\" 添加一个 \"),n(\"span\",{pre:!0,attrs:{class:\"token template-string\"}},[n(\"span\",{pre:!0,attrs:{class:\"token template-punctuation string\"}},[s._v(\"`\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\";\")]),n(\"span\",{pre:!0,attrs:{class:\"token template-punctuation string\"}},[s._v(\"`\")])]),s._v(\"。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"foo\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"   \\n\\t\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\"   \\n\\t\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"      \\n\\t\\tfoo\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'bar'\")]),s._v(\"   \\n\\t\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"foo\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"undefined\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"foo\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"   \\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"      \\n        foo\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'bar'\")]),s._v(\"   \\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"foo\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"foo\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"bar\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"数组和对象的和\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数组和对象的和\"}},[s._v(\"#\")]),s._v(\" 数组和对象的和\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"9\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"[object Object]\"')]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"\"')]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"[object Object][object Object]\"')]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"==\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"true\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\")])]),n(\"p\",[s._v(\"来自：公众号「大迁世界」\")]),s._v(\" \"),n(\"h2\",{attrs:{id:\"与-的结果是什么\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#与-的结果是什么\"}},[s._v(\"#\")]),s._v(\" {} + {}与{} + []的结果是什么\")]),s._v(\" \"),n(\"p\",[s._v(\"《\"),n(\"router-link\",{attrs:{to:\"/font/JS/空对象与空数组相加问题.html\"}},[s._v(\"空对象与空数组相加问题\")]),s._v(\"》\")],1),s._v(\" \"),n(\"p\",[s._v(\"以下转自:\"),n(\"a\",{attrs:{href:\"https://segmentfault.com/a/1190000016595592#articleHeader2\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"https://segmentfault.com/a/1190000016595592#articleHeader2\"),n(\"OutboundLink\")],1)]),s._v(\" \"),n(\"h2\",{attrs:{id:\"与\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#与\"}},[s._v(\"#\")]),s._v(\" !与!!\")]),s._v(\" \"),n(\"p\",[s._v(\"!为逻辑非操作符，可以应用于ECMAScript中的任何值，无论这个值是什么类型，\"),n(\"strong\",[s._v(\"它会被强制转化为一个布尔值变量，再对其值取反。\")])]),s._v(\" \"),n(\"p\",[s._v(\"!!只是单纯的将操作数执行两次逻辑非，它能将任意类型的值转化为相应的布尔值，它包含的步骤为：\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[s._v(\"将一个值转化为布尔值；\")]),s._v(\" \"),n(\"li\",[s._v(\"将其取反；\")]),s._v(\" \"),n(\"li\",[s._v(\"再次取反。\")])]),s._v(\" \"),n(\"p\",[s._v(\"假设你需要通过一个布尔型变量表示是否有id值，以下写法推荐你使用最后一种方式来进行转化：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"const\")]),s._v(\" enable1 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),s._v(\"id；\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"const\")]),s._v(\" enable2 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" id \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"?\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"true\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"false\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"const\")]),s._v(\" enable3 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"Boolean\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"id\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"与-2\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#与-2\"}},[s._v(\"#\")]),s._v(\" ~ 与 ~~\")]),s._v(\" \"),n(\"p\",[n(\"code\",[s._v(\"~\")]),s._v(\"表示\"),n(\"strong\",[s._v(\"按位取反\")]),s._v(\"，\"),n(\"code\",[s._v(\"~5\")]),s._v(\"的运行步骤为：\")]),s._v(\" \"),n(\"ol\",[n(\"li\",[s._v(\"转为一个字节的二进制表示：00000101，\")]),s._v(\" \"),n(\"li\",[s._v(\"按位取反：11111010\")]),s._v(\" \"),n(\"li\",[s._v(\"取其反码：10000101\")]),s._v(\" \"),n(\"li\",[s._v(\"取其补码：10000110\")]),s._v(\" \"),n(\"li\",[s._v(\"转化为十进制：-6(取反-1)\")])]),s._v(\" \"),n(\"p\",[n(\"code\",[s._v(\"~~\")]),s._v(\"它代表\"),n(\"strong\",[s._v(\"双非按位取反运算符，如果你想使用比Math.floor()更快的方法，那就是它\")]),s._v(\"了。需要注意，对于正数，它向下取整；对于负数，向上取整；非数字取值为0，它具体的表现形式为：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"      \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// => 0\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"undefined\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// => 0\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"Infinity\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"  \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// => 0\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"--\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"NaN\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"       \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// => 0\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"         \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// => 0\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"        \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// => 0\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"        \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// => 0\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"/\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"     \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// => 0\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"false\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"     \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// => 0\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"true\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"      \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// => 1\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1.9\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"       \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// => 1\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"~\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1.9\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"      \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// => -1\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#\"}},[s._v(\"#\")]),s._v(\" +\")]),s._v(\" \"),n(\"p\",[s._v(\"在变量值前使用+的本意是\"),n(\"strong\",[s._v(\"将变量转换为数字\")]),s._v(\"，在一个函数接受数字类型的参数时特别有用：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'1'\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 1\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'-1'\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// '-1\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 0\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// NaN\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\")])]),n(\"p\",[s._v(\"根据观察，\"),n(\"code\",[s._v(\"+a\")]),s._v(\"与\"),n(\"code\",[s._v(\"a * 1\")]),s._v(\"结果类似。除此之外，使用+也可以作为立即执行函数：\"),n(\"code\",[s._v(\"+function() {}()\")]),s._v(\"，等效于\"),n(\"code\",[s._v(\"(function(){})()\")]),s._v(\"。\")]),s._v(\" \"),n(\"p\",[s._v(\"字符串与数字相加时会将数值默认转为字符串，因此有了一下将数字转为字符串的快捷方法：\"),n(\"code\",[s._v(\"'' + 1\")]),s._v(\"。\")]),s._v(\" \"),n(\"h2\",{attrs:{id:\"与-3\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#与-3\"}},[s._v(\"#\")]),s._v(\" & 与 &&\")]),s._v(\" \"),n(\"p\",[s._v(\"如何你是从类C语言过来的话，请抛弃之前的刻板印象：&可以充当逻辑操作符号。在JavaScript中，&只能进行位运算。\")]),s._v(\" \"),n(\"p\",[n(\"code\",[s._v(\"&\")]),s._v(\"，它表示\"),n(\"strong\",[s._v(\"按位与\")]),s._v(\"，此运算符需要两个数字并返回一个数字。如果它们不是数字，则会转换为数字。如果执行\"),n(\"code\",[s._v(\"7 & 3\")]),s._v(\"， 则会经过以下步骤：\")]),s._v(\" \"),n(\"ol\",[n(\"li\",[s._v(\"先转换为2进制： \"),n(\"code\",[s._v(\"111 & 11\")])]),s._v(\" \"),n(\"li\",[s._v(\"比较结果为：\"),n(\"code\",[s._v(\"011\")])]),s._v(\" \"),n(\"li\",[s._v(\"将二进制转回十进制，因此：\"),n(\"code\",[s._v(\"7 & 3 = 3\")])])]),s._v(\" \"),n(\"p\",[s._v(\"它也可用于基偶数判断：\"),n(\"code\",[s._v(\"const isOdd = num => !!(num & 1);\")])]),s._v(\" \"),n(\"p\",[n(\"code\",[s._v(\"&&\")]),s._v(\"，表示\"),n(\"strong\",[s._v(\"逻辑与\")]),s._v(\"，通常用于if条件判断，可跟你想象的不太一样，&&并不是单纯的返回true或者false，而是依据：\")]),s._v(\" \"),n(\"ol\",[n(\"li\",[s._v(\"若第一个表达式为false，则返回第一个表达式；\")]),s._v(\" \"),n(\"li\",[s._v(\"若第一个表达式为true，返回第二个表达式。\")])]),s._v(\" \"),n(\"p\",[s._v(\"在这里举几个例子：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"&&\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"false\")]),s._v(\"          \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"both are \"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"false\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),s._v(\"y\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" but \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\" is the first\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"true\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"&&\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"false\")]),s._v(\"       \"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"false\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"second one is \"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"false\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),s._v(\"y\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"true\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"&&\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"true\")]),s._v(\"        \"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"true\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"both are \"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"true\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),s._v(\"y\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"true\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"&&\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"20\")]),s._v(\"          \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"20\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"both are \"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"true\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),s._v(\"y\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\")])]),n(\"p\",[n(\"code\",[s._v(\"&&\")]),s._v(\"可以连接多个操作符，如：\"),n(\"code\",[s._v(\"a && b && c && d\")]),s._v(\"，返回值的规则与上面一样。除此以外，它还经常被作为短路逻辑使用：若前面表达式不是truthy，则不会继续执行之后的表达式。如在取一个对象的属性，我们需要先判断是否为空才能进行取值，否则会抛出Uncaught TypeError，这种情况下一般我们也会通过逻辑或，给与表达式一个默认值：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"const\")]),s._v(\" value \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" obj \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"&&\")]),s._v(\" obj\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"value \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"||\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"false\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[s._v(\"当JavaScript压缩工具遇到if判断时，也会使用&&短路逻辑从而节省内存空间：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// before\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"test\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'hello'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// after\")]),s._v(\"\\ntest \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"&&\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'hello'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"与-4\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#与-4\"}},[s._v(\"#\")]),s._v(\" | 与 ||\")]),s._v(\" \"),n(\"p\",[s._v(\"它们与\"),n(\"code\",[s._v(\"&\")]),s._v(\"和\"),n(\"code\",[s._v(\"&&\")]),s._v(\"使用方法很相似，不同的是它们表示的是\"),n(\"strong\",[s._v(\"逻辑或\")]),s._v(\"，因此使用\"),n(\"code\",[s._v(\"|\")]),s._v(\"会进行按位或运算，而\"),n(\"code\",[s._v(\"||\")]),s._v(\"会返回第一个Truthy值。\")]),s._v(\" \"),n(\"p\",[s._v(\"使用||进行默认值赋值在JavaScript中十分常见，这样可以省略很多不必要的if语句，比如：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// before\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" res\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  res \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" a\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"else\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"b\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  res \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" b\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"else\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"c\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  res \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" c\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"else\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  res \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// after\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"const\")]),s._v(\" res \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" a \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"||\")]),s._v(\" b \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"||\")]),s._v(\" c \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"||\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\")])]),n(\"h3\",{attrs:{id:\"与-5\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#与-5\"}},[s._v(\"#\")]),s._v(\" == 与 ===\")]),s._v(\" \"),n(\"p\",[n(\"code\",[s._v(\"==\")]),s._v(\"为相等运算符，操作符会先将左右两边的操作数强制转型，转换为相同的操作数，再进行相等性比较。\")]),s._v(\" \"),n(\"p\",[n(\"code\",[s._v(\"===\")]),s._v(\"为全等运算符，它除了在比较时不会将操作数强制转型，其余相等判断与\"),n(\"code\",[s._v(\"==\")]),s._v(\"一致。\")]),s._v(\" \"),n(\"p\",[s._v(\"简单而言，\"),n(\"code\",[s._v(\"==\")]),s._v(\"用于判断值是否相等，\"),n(\"code\",[s._v(\"===\")]),s._v(\"判断值与类型是否都相等，因此使用全等运算符判断操作数会更准确，新手也在学习JavaScript接收到的前几条Tips就是避免使用相等运算符，真的是这样吗？没错，这样能确保在你不彻底熟悉语言的情况下，尽可能的去避免犯错，但是我们也应该清楚在哪些情况下应该使用相等运算符，规则往往只针对于新手，而对聪明的你来说，最重要的是要清楚自己在做什么。\")]),s._v(\" \"),n(\"p\",[s._v(\"相等操作符对于不同类型的值，进行的比较如下图所示：\")]),s._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:a(354),alt:\"1571387331363\"}})]),s._v(\" \"),n(\"p\",[s._v(\"针对于undefined与null：\"),n(\"strong\",[s._v(\"undefined与null互等，与其余任意对象都不相等\")]),s._v(\"，因此在某些lib里，你可能会看到如下写法：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"VAR\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"==\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"undefined\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"VAR\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"==\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\")])]),n(\"p\",[s._v(\"它等效于：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"VAR\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"===\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"undefined\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"||\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"VAR\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"===\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[s._v(\"对于 \"),n(\"code\",[s._v(\"'', false, 0\")]),s._v(\"而言，他们都属于\"),n(\"a\",{attrs:{href:\"https://developer.mozilla.org/en-US/docs/Glossary/Falsy\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"Falsy\"),n(\"OutboundLink\")],1),s._v(\"类型，通过Boolean对象都会转换为假值，而通过\"),n(\"code\",[s._v(\"==\")]),s._v(\"判断三者的关系，他们总是相等的，因为在比较值时它们会因为类型不同而都被转换为false值：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[s._v(\"console\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"false\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"==\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"&&\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"==\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"''\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"&&\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"''\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"==\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"false\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// true\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[s._v(\"或者有时候我们希望利用强转特性比较字符串与数字：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[s._v(\"console\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"11\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"==\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'11'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// true\")]),s._v(\"\\nconsole\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"11\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"===\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'11'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// false\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"-2\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#-2\"}},[s._v(\"#\")]),s._v(\" ^\")]),s._v(\" \"),n(\"p\",[s._v(\"按位异或运算符，对比每一个比特位，当比特位不相同时则返回1，否则返回0。很少人在Web开发中使用此运算符吧，除了传说中的一种场景：交换值。\")]),s._v(\" \"),n(\"p\",[s._v(\"若要交换a与b的值，如果可以的话推荐你使用：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"a\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" b\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"b\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" a\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[s._v(\"或者新建一个c，用于存储临时变量，如果你遇到有人这样书写：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 异或运算，相同位取0，不同位取1，a ^ b ^ b = a， a ^ a ^ b = b\")]),s._v(\"\\na \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" a \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"^\")]),s._v(\" b\\nb \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" a \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"^\")]),s._v(\" b\\na \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" a \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"^\")]),s._v(\" b\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\")])]),n(\"p\",[s._v(\"这样通过异或运算进行交换两个数字型变量，请原谅他并忽视它，他只可能是一个醉心于魔法的初心者，并祝愿他早日发现，简洁易读的函数才是最佳实践。\")]),s._v(\" \"),n(\"h2\",{attrs:{id:\"_0\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_0\"}},[s._v(\"#\")]),s._v(\" >>> 0\")]),s._v(\" \"),n(\"p\",[s._v(\"无符号右移运算，对最高位的符号位不作特殊处理，将整体二进制码向右移动，舍弃低位，高位以 0 进行补充，我们以 1 byte 大小的的整数进行举例：\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[n(\"code\",[s._v(\"3 >>> 1\")]),s._v(\"等价于\"),n(\"code\",[s._v(\"0000 0011\")]),s._v(\"向右移动 1 位：\"),n(\"code\",[s._v(\"000 0001\")]),s._v(\"，然后高位补0:\"),n(\"code\",[s._v(\"0000 0001\")]),s._v(\"，即\"),n(\"code\",[s._v(\"3 >>> 1 = 1\")])])]),s._v(\" \"),n(\"p\",[s._v(\"在 js 中，我们总能发现一些使用\"),n(\"code\",[s._v(\">>> 0\")]),s._v(\"的 Hack 代码，其中核心特性就是无符号右移 0 位可以将所以类型的值都转化为 number 类型做统一处理，且非 number 类型转换为 0，以下大概列了一些基本用法：\")]),s._v(\" \"),n(\"table\",[n(\"thead\",[n(\"tr\",[n(\"th\",{staticStyle:{\"text-align\":\"left\"}},[s._v(\"类型\")]),s._v(\" \"),n(\"th\",{staticStyle:{\"text-align\":\"left\"}},[s._v(\"操作\")]),s._v(\" \"),n(\"th\",{staticStyle:{\"text-align\":\"left\"}},[s._v(\"示例\")])])]),s._v(\" \"),n(\"tbody\",[n(\"tr\",[n(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s._v(\"正整数\")]),s._v(\" \"),n(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s._v(\"不做任何操作\")]),s._v(\" \"),n(\"td\",{staticStyle:{\"text-align\":\"left\"}},[n(\"code\",[s._v(\"1 >>> 0 = 1\")])])]),s._v(\" \"),n(\"tr\",[n(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s._v(\"负整数\")]),s._v(\" \"),n(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s._v(\"取负数的补码的值\")]),s._v(\" \"),n(\"td\",{staticStyle:{\"text-align\":\"left\"}},[n(\"code\",[s._v(\"-1 >>> 0 = 4294967295\")])])]),s._v(\" \"),n(\"tr\",[n(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s._v(\"布尔值\")]),s._v(\" \"),n(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s._v(\"转化为 1 or 0\")]),s._v(\" \"),n(\"td\",{staticStyle:{\"text-align\":\"left\"}},[n(\"code\",[s._v(\"true >>> 0 = 1\")]),s._v(\"、\"),n(\"code\",[s._v(\"false >>> 0 = 0\")])])]),s._v(\" \"),n(\"tr\",[n(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s._v(\"字符串\")]),s._v(\" \"),n(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s._v(\"若isNaN(str)，值为 0；否则值为\"),n(\"code\",[s._v(\"parseInt(str) >>> 0\")])]),s._v(\" \"),n(\"td\",{staticStyle:{\"text-align\":\"left\"}},[n(\"code\",[s._v(\"'1' >>> 0 = 1\")]),s._v(\"、\"),n(\"code\",[s._v(\"'s' >>> 0 = 0\")])])]),s._v(\" \"),n(\"tr\",[n(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s._v(\"浮点数\")]),s._v(\" \"),n(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s._v(\"舍弃掉小数位，然后再执行整数移位操作\")]),s._v(\" \"),n(\"td\",{staticStyle:{\"text-align\":\"left\"}},[n(\"code\",[s._v(\"1.1 >>> 0 = 1 >>> 0\")]),s._v(\"、\"),n(\"code\",[s._v(\"-1.1 >>> 0 = -1 >>> 0\")])])]),s._v(\" \"),n(\"tr\",[n(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s._v(\"其他对象\")]),s._v(\" \"),n(\"td\",{staticStyle:{\"text-align\":\"left\"}},[s._v(\"统一值为0\")]),s._v(\" \"),n(\"td\",{staticStyle:{\"text-align\":\"left\"}},[n(\"code\",[s._v(\"[] >>> 0 = 0\")]),s._v(\"、\"),n(\"code\",[s._v(\"undefined >>> 0 = 0\")]),s._v(\"、...\")])])])]),s._v(\" \"),n(\"h2\",{attrs:{id:\"-3\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#-3\"}},[s._v(\"#\")]),s._v(\" ..⭐️\")]),s._v(\" \"),n(\"p\",[s._v(\"在JavaScipt整数和浮点数都属于\"),n(\"code\",[s._v(\"Number\")]),s._v(\"类型，所有数字都以64位浮点数的形式储存，因此在解析语句时允许数组后面跟着一个小数点（\"),n(\"code\",[s._v(\"1. === 1\")]),s._v(\"），可这样其实会引发一个问题，解释器无法解析\"),n(\"code\",[s._v(\"1.toString()\")]),s._v(\"这样的语句，会抛出：\"),n(\"code\",[s._v(\"Uncaught SyntaxError\")]),s._v(\"，此时表达式中的\"),n(\"code\",[s._v(\".\")]),s._v(\"并没有视为属性访问器，而是与1结合为浮点数\"),n(\"code\",[s._v(\"1.\")]),s._v(\"，所以程序会报错，\"),n(\"code\",[s._v(\"1.toString()\")]),s._v(\"等同于\"),n(\"code\",[s._v(\"1toString()\")]),s._v(\"。\")]),s._v(\" \"),n(\"p\",[s._v(\"为了更便于理解，可以记住这个规则：在解释器眼中，Number型表达式的出现的第一个\"),n(\"code\",[s._v(\".\")]),s._v(\"为浮点数的小数分隔符号，第二个\"),n(\"code\",[s._v(\".\")]),s._v(\"为属性访问器。比如\"),n(\"code\",[s._v(\"1.0.toString()\")]),s._v(\"与\"),n(\"code\",[s._v(\"1..toString()\")]),s._v(\"这样的语法都能正常执行。需要注意的是变量与表达式的区别，若将Number型表达式赋值给变量，通过变量是可以直接调用原型方法的，因为此时的\"),n(\"code\",[s._v(\".\")]),s._v(\"没有歧义。\")]),s._v(\" \"),n(\"p\",[s._v(\"这样的松散类型结构确实很使人产生误解，在程序中我们都应该规避这样的歧义性语句，通过括号消除数值表达式的歧义\"),n(\"code\",[s._v(\"(1).toString()\")]),s._v(\"，而不是为了耍酷使用\"),n(\"code\",[s._v(\"1..toString()\")]),s._v(\"。\")]),s._v(\" \"),n(\"h2\",{attrs:{id:\"void\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#void\"}},[s._v(\"#\")]),s._v(\" void\")]),s._v(\" \"),n(\"p\",[s._v(\"根据MDN中的定义：\"),n(\"code\",[s._v(\"void对给定的表达式进行求值，然后返回undefined\")]),s._v(\"，我们可以有很多种方式去理解这句话。\")]),s._v(\" \"),n(\"p\",[s._v(\"首先它可以作为undefined的替代品，由于undefined不是保留字，它其实是一个全局变量值，因此我们可以对其进行改变，程序可能会出现不稳定的状态，在ES5中已经是一个只读属性了，但是在局部作用域中，还是有被重载的可能（你可能也有被害妄想症）：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"const\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"undefined\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'hello'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n  console\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"undefined\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// hello\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\")])]),n(\"p\",[s._v(\"其次，我们可以在函数前面加上void关键字，表示函数没有返回值，但是不必在每一个函数都加上，这不符合JavaScript的代码风格，利用此特性我们可以用于执行IIFE（立即执行函数），让我们来看以下示例：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"const\")]),s._v(\" arrs \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  console\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'hello'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\")])]),n(\"p\",[s._v(\"若你不习惯于写分号，那就极有可能遇到过这种报错：\"),n(\"code\",[s._v(\"Uncaught TypeError: [] is not a function\")]),s._v(\"，这是由于编辑器在进行minify的时候无法进行正确的分词，这时通过void就可以解决此类问题，解决了分词的问题，也使立即执行函数调用更加优雅：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"const\")]),s._v(\" arrs \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  console\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'hello'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\")])]),n(\"p\",[s._v(\"在有时我们不希望a标签进行跳转，以下是一些常用方法：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"--\")]),s._v(\" 使用preventDefault \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"--\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\"a id\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"a\"')]),s._v(\" href\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"\"')]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"hello\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"/\")]),s._v(\"a\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\"script\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"\\n  a\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"addEventListener\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"'click'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"e\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=>\")]),s._v(\" e\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"preventDefault\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"/\")]),s._v(\"script\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"\\n\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"--\")]),s._v(\" 使用\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"false\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"--\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\"a href\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"\"')]),s._v(\" onclick\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"return false;\"')]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"hello\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"/\")]),s._v(\"a\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\")])]),n(\"p\",[s._v(\"当我们给href值设置为\"),n(\"code\",[s._v(\"undefined\")]),s._v(\"，也可以避免a标签的默认跳转行为：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\"a href\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"javascript: void 0;\"')]),s._v(\" onclick\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"return false;\"')]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"hello\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"/\")]),s._v(\"a\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"数值表示法\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数值表示法\"}},[s._v(\"#\")]),s._v(\" 数值表示法\")]),s._v(\" \"),n(\"h3\",{attrs:{id:\"_3e9\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3e9\"}},[s._v(\"#\")]),s._v(\" 3e9\")]),s._v(\" \"),n(\"p\",[s._v(\"科学计数法是一种数学术语，将一个数表示为a乘以10的n次方，如光速30万公里每秒，在计算中通常将米做单位，则记为：300000000m/s，而在JavaScript中我们可使用科学计数法 \"),n(\"code\",[s._v(\"3e9\")]),s._v(\"表示。\")]),s._v(\" \"),n(\"p\",[s._v(\"在这里举几个科学计数法的示例：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1e5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 100000\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2e-4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 0.0002\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3e3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// -3000\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\")])]),n(\"p\",[s._v(\"Number对象有\"),n(\"code\",[s._v(\"toExponential(fractionDigits)\")]),s._v(\"方法以科学计数法返回该数值的字符串表示形式，参数fractionDigits可选，用于用来指定小数点后有几位数字，例如：\"),n(\"code\",[s._v('(179000).toExponential(); // \"1.79e+5\"')]),s._v(\"。\")]),s._v(\" \"),n(\"p\",[s._v(\"以下情况JavaScript会自动将数值转为科学计数法表示：\")]),s._v(\" \"),n(\"ol\",[n(\"li\",[s._v(\"小数点前的数字多于21位。\")]),s._v(\" \"),n(\"li\",[s._v(\"数值小于1且小数点后的零多于5个，如\"),n(\"code\",[s._v(\"0.0000001\")]),s._v(\"。\")])]),s._v(\" \"),n(\"h3\",{attrs:{id:\"_5px\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5px\"}},[s._v(\"#\")]),s._v(\" .5px\")]),s._v(\" \"),n(\"p\",[s._v(\"通常某些人习惯省略0.开头的数字，常见于数值计算、css属性中，比如\"),n(\"code\",[s._v(\"0.5px\")]),s._v(\"可直接写为\"),n(\"code\",[s._v(\".5px\")]),s._v(\"，\"),n(\"code\",[s._v(\"0.2 * 0.3\")]),s._v(\"可写为： \"),n(\"code\",[s._v(\".2 * .3\")])]),s._v(\" \"),n(\"h3\",{attrs:{id:\"_0x、0o和0b\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_0x、0o和0b\"}},[s._v(\"#\")]),s._v(\" 0x、0o和0b\")]),s._v(\" \"),n(\"p\",[s._v(\"在十进制的世界里呆久了，请不要忘记还有其他进制的存在，在计算机中它们是同地位的。JavaScript提供了以下进制的表示方法：\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[s._v(\"二进制：只用0和1两个数字，前缀为\"),n(\"code\",[s._v(\"0b\")]),s._v(\"，十进制13可表示为\"),n(\"code\",[s._v(\"0b1101\")])]),s._v(\" \"),n(\"li\",[s._v(\"八进制：只用0到7八个数字，前缀为\"),n(\"code\",[s._v(\"0o、0\")]),s._v(\"，十进制13可表示为\"),n(\"code\",[s._v(\"0o15、015\")])]),s._v(\" \"),n(\"li\",[s._v(\"十六进制：只用0到9的十个数字，和a到f六个字母，前缀为\"),n(\"code\",[s._v(\"0x\")]),s._v(\"，十进制13可表示为\"),n(\"code\",[s._v(\"0xd\")])])]),s._v(\" \"),n(\"p\",[s._v(\"默认情况下，JavaScript 内部会自动将八进制、十六进制、二进制转为十进制再进行运算。从十进制转其他进制请查阅\"),n(\"code\",[s._v(\"toString\")]),s._v(\"方法，从其他进制转十进制请查阅\"),n(\"code\",[s._v(\"parseInt\")]),s._v(\"方法，从其他进制转其他进制请先转为十进制再转为其他方法。\")]),s._v(\" \"),n(\"h2\",{attrs:{id:\"array-prototype-sort\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#array-prototype-sort\"}},[s._v(\"#\")]),s._v(\" Array.prototype.sort\")]),s._v(\" \"),n(\"p\",[s._v(\"Array.prototype.sort()默认根据字符串的Unicode编码进行排序，具体算法取决于实现的浏览器，在\"),n(\"a\",{attrs:{href:\"https://github.com/v8/v8/blob/b8a5ae4749be1b34246957982e205517737d814b/src/js/array.js#L545\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"v8引擎\"),n(\"OutboundLink\")],1),s._v(\"中，若数组长度小于10则使用从插入排序，大于10使用的是快排。\")]),s._v(\" \"),n(\"p\",[s._v(\"而sort支持传入一个\"),n(\"code\",[s._v(\"compareFunction(a, b)\")]),s._v(\"的参数，其中a、b为数组中进行比较的两个非空对象(所有空对象将会排在数组的最后)，具体比较规则为：\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[s._v(\"返回值小于0，a排在b的左边\")]),s._v(\" \"),n(\"li\",[s._v(\"返回值等于0，a和b的位置不变\")]),s._v(\" \"),n(\"li\",[s._v(\"返回值大于0，a排在b的右边\")])]),s._v(\" \"),n(\"p\",[s._v(\"因此利用sort即可写一个打乱数组的方法：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"sort\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=>\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\".5\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),s._v(\" Math\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"random\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[s._v(\"但是以上的实现并不是完全随机的，究其原因，还是因为排序算法的不稳定性，导致一些元素没有机会进行比较，具体请参考\"),n(\"a\",{attrs:{href:\"https://www.zhihu.com/question/68330851\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"问题\"),n(\"OutboundLink\")],1),s._v(\"，在抽奖程序中若要实现完全随机，请使用 ⭐️\"),n(\"strong\",[s._v(\"Fisher–Yates shuffle\")]),s._v(\" 算法，以下是简单实现：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"shuffle\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"arrs\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" i \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" arrs\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"length \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" i \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\">\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" i \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"const\")]),s._v(\" random \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" Math\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"floor\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"Math\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"random\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"i \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"arrs\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"random\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" arrs\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"i\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"arrs\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"i\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" arrs\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"random\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"array-prototype-concat-apply\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#array-prototype-concat-apply\"}},[s._v(\"#\")]),s._v(\" Array.prototype.concat.apply\")]),s._v(\" \"),n(\"p\",[s._v(\"apply接收数组类型的参数来调用函数，而concat接收字符串或数组的多个参数，因此可使用此技巧将二维数组直接展平：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Array\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"prototype\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"concat\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"apply\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[s._v(\"而通过此方法也可以写一个深层次遍历的方法：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"flattenDeep\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"arrs\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" result \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Array\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"prototype\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"concat\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"apply\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" arrs\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"while\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"result\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"some\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"item\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=>\")]),s._v(\" item \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"instanceof\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Array\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    result \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Array\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"prototype\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"concat\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"apply\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" result\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" result\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\")])]),n(\"p\",[s._v(\"经过测试，效率与lodash对比如下：\")]),s._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:a(355),alt:\"1571401546493\"}})]),s._v(\" \"),n(\"p\",[s._v(\"对上述方法中的\"),n(\"code\",[s._v(\"Array.prototype.concat.apply([], target)\")]),s._v(\"亦可以写成：\"),n(\"code\",[s._v(\"[].concat(...target)\")]),s._v(\"。\")]),s._v(\" \"),n(\"h2\",{attrs:{id:\"array-prototype-push-apply\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#array-prototype-push-apply\"}},[s._v(\"#\")]),s._v(\" Array.prototype.push.apply\")]),s._v(\" \"),n(\"p\",[s._v(\"在es5中，若想要对数组进行拼接操作，我们习惯于使用数组中的concat方法：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" arrs \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\narrs \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" arrs\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"concat\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\")])]),n(\"p\",[s._v(\"但还有酷的方法，利用apply方法的数组传参特性，可以更简洁的执行拼接操作：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"const\")]),s._v(\" arrs \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\narrs\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"push\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"apply\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"arrs\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"array-prototype-length\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#array-prototype-length\"}},[s._v(\"#\")]),s._v(\" Array.prototype.length\")]),s._v(\" \"),n(\"p\",[s._v(\"它通常用于返回数组的长度，但是也是一个包含有复杂行为的属性，首先需要说明的是，\"),n(\"strong\",[s._v(\"它并不是用于统计数组中元素的数量\")]),s._v(\"，而是代表数组中最高索引的值：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"const\")]),s._v(\" arrs \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\narrs\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\nconsole\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"arrs\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"length\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 6\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\")])]),n(\"p\",[s._v(\"另外，length长度随着数组的变化而变化，但是这种变化仅限于：\"),n(\"strong\",[s._v(\"子元素最高索引值的变化\")]),s._v(\"，假如使用\"),n(\"code\",[s._v(\"delete\")]),s._v(\"方法删除最高元素，length是不会变化的，因为最高索引值也没变：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"const\")]),s._v(\" arrs \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"delete\")]),s._v(\" arrs\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 长度依然为3\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\")])]),n(\"p\",[s._v(\"length还有一个重要的特性，那就是允许你修改它的值，若修改值小于数组本身的最大索引，则会对数组进行部分截取：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"const\")]),s._v(\" arrs \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\narrs\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"length \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// arrs = [1, 2]\")]),s._v(\"\\narrs\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"length \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// arrs = []\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\")])]),n(\"p\",[s._v(\"若赋予的值大于当前最大索引，则会得到一个稀疏数组：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"const\")]),s._v(\" arrs \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\narrs\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"length \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// arrs = [1, 2,,,,]\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\")])]),n(\"p\",[s._v(\"若将值赋为0，则执行了\"),n(\"strong\",[s._v(\"清空数组\")]),s._v(\"的操作:\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"const\")]),s._v(\" arrs \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\narrs\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"length \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// arrs = []\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\")])]),n(\"p\",[s._v(\"使用此方法会将数组中的所有索引都删除掉，因此也会影响其他引用此数组的值，这点跟使用\"),n(\"code\",[s._v(\"arrs = []\")]),s._v(\"有很大的区别：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" a \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" b \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" a1 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" a\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" b1 \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" b\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\na \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\nb\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"length \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\nconsole\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" b\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" a1\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" b1\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// [], [], [1, 2, 3], []\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\")])]),n(\"p\",[s._v(\"在对length进行修改的时候，还需要注意：\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[s._v(\"值需要为正整数\")]),s._v(\" \"),n(\"li\",[s._v(\"传递字符串会被尝试转为数字类型\")])]),s._v(\" \"),n(\"h2\",{attrs:{id:\"object-prototype-tostring-call\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#object-prototype-tostring-call\"}},[s._v(\"#\")]),s._v(\" Object.prototype.toString.call\")]),s._v(\" \"),n(\"p\",[s._v(\"每个对象都有一个toString()，用于将对象以字符串方式引用时自动调用，如果此方法未被覆盖，toString则会返回[object type]，因此\"),n(\"code\",[s._v(\"Object.prototype.toString.call\")]),s._v(\"只是为了调用原生对象上未被覆盖的方法，call将作用域指向需要判断的对象，这样一来就可以通过原生的toString方法打印对象的类型字符串： \"),n(\"code\",[s._v('Object.prototype.toString.call([]) => \"[object Array]\"')]),s._v(\"，利用这个特性，可以较为精确的实现类型判断。\")]),s._v(\" \"),n(\"p\",[s._v(\"在ES3中，获取到的type为内部属性[[Class]]属性，它可以用来判断一个原生属性属于哪一种内置的值；在ES5中新增了两条规则：若this值为null、undefined分别返回： [object Null]、[object Undefined]；在ES6中不存在[[Class]]了，取而代之的是一种内部属性：[[NativeBrand]]，它是一种标记值，用于区分原生对象的属性，具体的判断规则为：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"19.1\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\".3\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\".6\")]),s._v(\"Object\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"prototype\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"toString\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\nWhen the toString method is called\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" the following steps are taken\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n\\nIf the \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"this\")]),s._v(\" value is \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"undefined\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"[object Undefined]\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\nIf the \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"this\")]),s._v(\" value is \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"[object Null]\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\nLet \"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"O\")]),s._v(\" be \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"ToObject\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"this\")]),s._v(\" value\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\nLet isArray be \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"?\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"IsArray\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"O\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\nIf isArray is \"),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"true\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" builtinTag be \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"Array\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\nElse \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"O\")]),s._v(\" is a String exotic object\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" builtinTag be \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"String\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\nElse \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"O\")]),s._v(\" has a \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"ParameterMap\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" internal slot\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" builtinTag be \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"Arguments\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\nElse \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"O\")]),s._v(\" has a \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"Call\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" internal method\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" builtinTag be \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"Function\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\nElse \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"O\")]),s._v(\" has an \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"ErrorData\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" internal slot\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" builtinTag be \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"Error\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\nElse \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"O\")]),s._v(\" has a \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"BooleanData\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" internal slot\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" builtinTag be \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"Boolean\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\nElse \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"O\")]),s._v(\" has a \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"NumberData\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" internal slot\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" builtinTag be \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"Number\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\nElse \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"O\")]),s._v(\" has a \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"DateValue\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" internal slot\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" builtinTag be \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"Date\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\nElse \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"O\")]),s._v(\" has a \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"RegExpMatcher\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" internal slot\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" builtinTag be \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"RegExp\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\nElse\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" builtinTag be \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"Object\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\nLet tag be \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"?\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"Get\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"O\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" @@toStringTag\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\nIf \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"Type\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"tag\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" is not String\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"set\")]),s._v(\" tag to builtinTag\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\nReturn the string\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),s._v(\"concatenation \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"of\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"[object \"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" tag\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" and \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"]\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\nThis \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" is the \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"%\")]),s._v(\"ObjProto_toString\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"%\")]),s._v(\" intrinsic object\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\n\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"NOTE\")]),s._v(\"\\nHistorically\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"this\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),s._v(\" was occasionally used to access the String value \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"of\")]),s._v(\" the \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"Class\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" internal slot that was used \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"in\")]),s._v(\" previous editions \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"of\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"this\")]),s._v(\" specification \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"as\")]),s._v(\" a nominal type tag \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" various built\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"in\")]),s._v(\" objects\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\" The above definition \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"of\")]),s._v(\" toString preserves compatibility \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" legacy code that uses toString \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"as\")]),s._v(\" a test \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" those specific kinds \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"of\")]),s._v(\" built\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"in\")]),s._v(\" objects\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\" It does not provide a reliable type testing mechanism \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" other kinds \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"of\")]),s._v(\" built\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"in\")]),s._v(\" or program defined objects\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\" In addition\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" programs can use @@toStringTag \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"in\")]),s._v(\" ways that will invalidate the reliability \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"of\")]),s._v(\" such legacy type tests\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"object-create-null\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#object-create-null\"}},[s._v(\"#\")]),s._v(\" Object.create(null)\")]),s._v(\" \"),n(\"p\",[s._v(\"用于创建无“副作用”的对象，也就是说，它创建的是一个\"),n(\"strong\",[s._v(\"空对象\")]),s._v(\"，不包含原型链与其他属性。若使用\"),n(\"code\",[s._v(\"const map = {}\")]),s._v(\"创建出来的对象相当于Object.create(Object.prototype)，它继承了对象的原型链。\")]),s._v(\" \"),n(\"h2\",{attrs:{id:\"json-parse-json-stringify-obj\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#json-parse-json-stringify-obj\"}},[s._v(\"#\")]),s._v(\" JSON.parse(JSON.stringify(Obj))\")]),s._v(\" \"),n(\"p\",[s._v(\"很常用的一种深拷贝对象的方式，将对象进行JSON字符串格式化再进行解析，即可获得一个新的对象，要注意它的性能不是特别好，而且无法处理闭环的引用，比如：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"const\")]),s._v(\" obj \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"a\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\nobj\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"b \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" obj\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"JSON\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"parse\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"JSON\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"stringify\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"obj\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// Uncaught TypeError: Converting circular structure to JSON\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\")])]),n(\"p\",[s._v(\"这样通过JSON解析的方式其实性能并不高，若对象可通过浅拷贝复制请一定使用浅拷贝的方式，不管你使用\"),n(\"code\",[s._v(\"{...obj}\")]),s._v(\"还是\"),n(\"code\",[s._v(\"Object.assign({}, obj)\")]),s._v(\"的方式，而如果对性能有要求的情况下，请不要再造轮子了，直接使用npm:clone这个包或是别的吧。\")]),s._v(\" \"),n(\"h2\",{attrs:{id:\"生成-0-1-n-1\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#生成-0-1-n-1\"}},[s._v(\"#\")]),s._v(\" 生成[0, 1, ..., N-1]\")]),s._v(\" \"),n(\"p\",[s._v(\"依稀记得在Python中生成列表的语法是多么简洁：\"),n(\"code\",[s._v(\"[ x for x in range(1, 10) ]\")]),s._v(\"，那么在JavaScript如何进行初始化1~10的有序序列呢？\")]),s._v(\" \"),n(\"p\",[s._v(\"行车有规范，直接使用\"),n(\"code\",[s._v(\"new Array(10)\")]),s._v(\"进行初始化并\"),n(\"code\",[s._v(\".map\")]),s._v(\"是不可取的，因为这样只设置了数组的length字段：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[s._v(\"Object\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getOwnPropertyNames\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v('// [\"0\", \"1\", \"2\", \"length\"]')]),s._v(\"\\n\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"const\")]),s._v(\" a \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"new\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Array\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// [undefined, undefined, undefined]\")]),s._v(\"\\nObject\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getOwnPropertyNames\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"a\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v('// [\"length\"]')]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\")])]),n(\"p\",[s._v(\"这样会导致\"),n(\"code\",[s._v(\"map\")]),s._v(\"、\"),n(\"code\",[s._v(\"filter\")]),s._v(\"等迭代方法无效，当然使用\"),n(\"code\",[s._v(\"fill\")]),s._v(\"填充后即可正常操作数组项，但是在这里会用其他方法解决。\")]),s._v(\" \"),n(\"p\",[s._v(\"在以前，大家喜欢使用这样的Hack技巧去初始化固定长度的数组：\"),n(\"code\",[s._v(\"Array.apply(null, { length: 3 })\")]),s._v(\"，需要特意说明的是，\"),n(\"code\",[s._v(\"{ length: 3 }\")]),s._v(\"其实是一个类数组对象，Array.prototype.apply内部取参数可能是这样实现的：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" index \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" i \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\" arguments\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"length\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" index\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"++\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// pass arguments[1][index]\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\")])]),n(\"p\",[s._v(\"正因如此，如果你基础没问题的话，就会发现上面的语句其实等效于：\"),n(\"code\",[s._v(\"Array(undefined, undefined, undefined)\")]),s._v(\"，综上，生成0~10的序列语句可写为：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"Array\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"apply\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\" length\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"map\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"v\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" k\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=>\")]),s._v(\" k\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[s._v(\"而对于ES6来讲，完全可以用\"),n(\"code\",[s._v(\"Array.from\")]),s._v(\"来替代以上的语句的：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[s._v(\"Array\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"from\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"new\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Array\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"k\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" v\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=>\")]),s._v(\" v\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[n(\"code\",[s._v(\"Array.from\")]),s._v(\"不仅接受字符串、Set、Map、类数组对象作为参数，凡是可迭代对象都可以，比如我们出于娱乐的目的使用生成器实现：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"function\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"*\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"range\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[s._v(\"start\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" end\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"for\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"let\")]),s._v(\" i \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" start\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" i \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"<\")]),s._v(\" end\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\" i\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"++\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"yield\")]),s._v(\" i\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\nArray\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"from\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"range\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// [1, 2, 3, 4, 5, 6, 7, 8, 9]\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"...\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"range\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// [1, 2, 3, 4, 5, 6, 7, 8, 9]\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"truthy与falsy\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#truthy与falsy\"}},[s._v(\"#\")]),s._v(\" Truthy与Falsy\")]),s._v(\" \"),n(\"p\",[s._v(\"对每一个类型的值来讲，它每一个对象都有一个布尔型的值，Falsy表示在Boolean对象中表现为false的值，在条件判断与循环中，JavaScript会将任意类型强制转化为Boolean对象。\\n以下这些对象在遇到if语句时都表现为Falsy：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"false\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"undefined\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"NaN\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v(\"''\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"\"')]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"document\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"all\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\")])]),n(\"p\",[s._v(\"document.all属于历史遗留原因，所以为false，它违背了JavaScript的规范，可以不管它，而NaN这个变量，千万不要用全等或相等对其进行判断，因为它发起疯来连自己都打：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[s._v(\"console\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"NaN\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"===\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// false\")]),s._v(\"\\nconsole\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"NaN\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"===\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"NaN\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// false\")]),s._v(\"\\nconsole\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"NaN\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"==\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"NaN\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// false\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\")])]),n(\"p\",[s._v(\"但是我们可以使用Object.is方法进行判断值是否为NaN，它是ES6新加入的语法，用于比较两个值是否相同，它可以视为比全等判断符更为严格的判断方法，但是不可混为一谈：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language-js line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[n(\"code\",[s._v(\"Object\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"is\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"NaN\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"NaN\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// true\")]),s._v(\"\\nObject\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"is\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// false\")]),s._v(\"\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\")])]),n(\"p\",[s._v(\"而除了Falsy值，所有值都是Truthy值，在Boolean上下文中表现为true。\")])])}),[],!1,null,null,null);t.default=e.exports}}]);","extractedComments":[]}