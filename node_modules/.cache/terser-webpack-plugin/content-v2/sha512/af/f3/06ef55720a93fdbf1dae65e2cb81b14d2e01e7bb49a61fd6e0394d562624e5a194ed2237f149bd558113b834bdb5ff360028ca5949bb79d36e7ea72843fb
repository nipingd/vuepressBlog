{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{777:function(t,s,e){\"use strict\";e.r(s);var a=e(0),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"p\",[t._v(\"以下题解来自:\"),e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"有效的括号\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#有效的括号\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/valid-parentheses/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"有效的括号\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"这是一道比较简单的以栈为数据结构处理的算法题，先把左括号型('(','{'等)的压入栈中,然后取出字符串剩余的依次跟栈顶匹配，匹配成功就弹出，失败则返回false，字符串匹配完，栈里还剩下元素，说明还不是一个有效的括号，返回false,代码如下:\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-js line-numbers-mode\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n * @param {string} s\\n * @return {boolean}\\n */\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"isValid\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"s\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" stack \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" mapper \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'{'\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"}\"')]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n        \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"[\"')]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"]\"')]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n        \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"(\"')]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\")\"')]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//这里加上对象映射，方便循环里去处理，不用写多余的if-else语句\")]),t._v(\"\\n    \\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" i \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"in\")]),t._v(\" s\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'('\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'['\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'{'\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"includes\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"s\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            stack\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"push\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"s\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"else\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" temp \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" stack\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"pop\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n            \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"s\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"!==\")]),t._v(\" mapper\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"temp\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n                \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"false\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n            \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n        \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"stack\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"false\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"true\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])]),t._v(\" \"),e(\"div\",{staticClass:\"line-numbers-wrapper\"},[e(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"11\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"12\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"13\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"14\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"15\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"16\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"17\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"18\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"19\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"20\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"21\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"22\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"23\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"24\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"25\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"26\")]),e(\"br\")])]),e(\"h2\",{attrs:{id:\"删除排序数组中的重复项\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#删除排序数组中的重复项\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"删除排序数组中的重复项\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"由于这道题是已经排好序的数组，本来处理起来会比较方便，但是题目要求不适用额外的素组空间，据此我的做法是设置一个temp指向i项，比较数组的i项，相等则删除i，不相等则temp等于i值，然后i++；代码如下：\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-js line-numbers-mode\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n * @param {number[]} nums\\n * @return {number}\\n */\")]),t._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//我自己的做法\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// var removeDuplicates = function(nums) {\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//     let temp=nums[0];\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//     let i=1;\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//   while(i<nums.length){\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//     if(temp===nums[i]){\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//         nums.splice(i,1);\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//       }else{\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//         temp=nums[i];\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//         i++;\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//       }\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//   }\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//   return nums.length\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// };\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"removeDuplicates\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"nums\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" oldIndex\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" newIndex\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"newIndex\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"nums\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"newIndex\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"nums\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"newIndex\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"!==\")]),t._v(\" nums\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"oldIndex\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n      oldIndex\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n      nums\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"oldIndex\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" nums\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"newIndex\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" oldIndex\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])]),t._v(\" \"),e(\"div\",{staticClass:\"line-numbers-wrapper\"},[e(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"11\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"12\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"13\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"14\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"15\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"16\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"17\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"18\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"19\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"20\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"21\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"22\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"23\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"24\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"25\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"26\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"27\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"28\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"29\")]),e(\"br\")])]),e(\"h2\",{attrs:{id:\"最大子序和\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#最大子序和\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/maximum-subarray/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"最大子序和\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"跳转\"),e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/53.maximum-sum-subarray-cn.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/53.maximum-sum-subarray-cn.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"类似的题:\"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/maximum-product-subarray/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://leetcode-cn.com/problems/maximum-product-subarray/\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"​\\t\\t\\t\\t\"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/longest-turbulent-subarray/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://leetcode-cn.com/problems/longest-turbulent-subarray/\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"无重复字符的最长子串\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#无重复字符的最长子串\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"无重复字符的最长子串\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/3.longestSubstringWithoutRepeatingCharacters.md\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"最长回文子串\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#最长回文子串\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/longest-palindromic-substring/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"最长回文子串\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/5.longest-palindromic-substring.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/5.longest-palindromic-substring.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"合并两个有序数组\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#合并两个有序数组\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/merge-sorted-array/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"合并两个有序数组\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/88.merge-sorted-array.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/88.merge-sorted-array.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"二叉树的最大深度\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二叉树的最大深度\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"二叉树的最大深度\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"用递归\"),e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/104.maximum-depth-of-binary-tree.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/104.maximum-depth-of-binary-tree.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"买卖股票的最佳时机\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#买卖股票的最佳时机\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"买卖股票的最佳时机\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/121.best-time-to-buy-and-sell-stock.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/121.best-time-to-buy-and-sell-stock.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"买卖股票的最佳时机-ii\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#买卖股票的最佳时机-ii\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"买卖股票的最佳时机 II\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/122.best-time-to-buy-and-sell-stock-ii.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/122.best-time-to-buy-and-sell-stock-ii.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"验证回文串\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#验证回文串\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/valid-palindrome/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"验证回文串\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"设置两个指针，一个指向头，一个指向尾，遇到其他字符时都向中间+1，有效字符就比较相同则left与right向中间+1，不同则返回false\")]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/125.valid-palindrome.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/125.valid-palindrome.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"只出现一次的数字\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#只出现一次的数字\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/single-number/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"只出现一次的数字\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"利用异或的性质，任何数和自身异或为0，所以每个两次出现的数字异或后都为0.任何数与0异或是本身，所以就可求出那个出现一次的数字\")]),t._v(\" \"),e(\"ol\",[e(\"li\",[t._v(\"异或的规律\")])]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"任何数和本身异或则为\"),e(\"code\",[t._v(\"0\")])]),t._v(\" \"),e(\"li\",[t._v(\"任何数和 0 异或是\"),e(\"code\",[t._v(\"本身\")])])]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/136.single-number.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/136.single-number.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"最小栈\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#最小栈\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/min-stack/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"最小栈\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/155.min-stack.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/155.min-stack.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"两数之和-ii-输入有序数组\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#两数之和-ii-输入有序数组\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/two-sum-ii-input-array-is-sorted/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"两数之和 II - 输入有序数组\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/167.two-sum-ii-input-array-is-sorted.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/167.two-sum-ii-input-array-is-sorted.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"阶乘后的零\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#阶乘后的零\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/factorial-trailing-zeroes/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"阶乘后的零\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/factorial-trailing-zeroes/submissions/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://leetcode-cn.com/problems/factorial-trailing-zeroes/submissions/\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"求众数\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#求众数\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/majority-element/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"求众数\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"div\",{staticClass:\"language-js line-numbers-mode\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n * @param {number[]} nums\\n * @return {number}\\n */\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//我自己的做法，空间复杂度高,其实测试后发现相差不大- -\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// var majorityElement = function(nums) {\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//   let obj = {};\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//   let len = Math.floor((nums.length)/2);\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//   for(let i = 0;i < nums.length;i++){\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//     if(obj[nums[i]]){\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//       obj[nums[i]]++;\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//     }else{\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//       obj[nums[i]] = 1;\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//     }\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//   }\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//   for(let i in obj){\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//     if(obj[i] > len){\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//       return i;\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//     }\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//   }\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// };\")]),t._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"majorityElement\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"nums\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" count \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" majority \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" nums\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" i \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\" nums\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"count \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"===\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            majority \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" nums\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n        \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"nums\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"===\")]),t._v(\" majority\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            count \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"else\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            count \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"--\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" majority\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])]),t._v(\" \"),e(\"div\",{staticClass:\"line-numbers-wrapper\"},[e(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"11\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"12\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"13\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"14\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"15\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"16\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"17\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"18\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"19\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"20\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"21\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"22\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"23\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"24\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"25\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"26\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"27\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"28\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"29\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"30\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"31\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"32\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"33\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"34\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"35\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"36\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"37\")]),e(\"br\")])]),e(\"h2\",{attrs:{id:\"颠倒二进制位\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#颠倒二进制位\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/reverse-bits/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"颠倒二进制位\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"n & 1 === 1, 说明n的最后一位是1\")]),t._v(\" \"),e(\"li\",[t._v(\"n & 1 === 0, 说明n的最后一位是0\")])]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/190.reverse-bits.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/190.reverse-bits.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"位1的个数\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#位1的个数\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/number-of-1-bits/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"位1的个数\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/191.number-of-1-bits.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/191.number-of-1-bits.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"这里用一个trick， 可以轻松求出。 就是\"),e(\"code\",[t._v(\"n & (n - 1)\")]),t._v(\" 可以\"),e(\"code\",[t._v(\"消除\")]),t._v(\" n 最后的一个1的原理。\")]),t._v(\" \"),e(\"p\",[t._v(\"这样我们可以不断进行\"),e(\"code\",[t._v(\"n = n & (n - 1)\")]),t._v(\"直到n === 0 ， 说明没有一个1了。 这个时候\"),e(\"code\",[t._v(\"我们消除了多少1变成一个1都没有了， 就说明n有多少个1了\")]),t._v(\"。\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"打家劫舍\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#打家劫舍\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/house-robber/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"打家劫舍\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"思路还是和其他简单的动态规划问题一样，我们本质上在解决\"),e(\"code\",[t._v(\"对于第[i] 个房子，我们抢还是不抢。\")]),t._v(\"的问题。\")]),t._v(\" \"),e(\"p\",[t._v(\"判断的标准就是总价值哪个更大， 那么对于抢的话\"),e(\"code\",[t._v(\"就是当前的房子可以抢的价值 + dp[i - 2]\")])]),t._v(\" \"),e(\"blockquote\",[e(\"p\",[t._v(\"i - 1 不能抢，否则会触发警铃\")])]),t._v(\" \"),e(\"p\",[t._v(\"如果不抢的话，就是\"),e(\"code\",[t._v(\"dp[i - 1]\")]),t._v(\".\")]),t._v(\" \"),e(\"blockquote\",[e(\"p\",[t._v(\"这里的 dp 其实就是\"),e(\"code\",[t._v(\"子问题\")]),t._v(\".\")])]),t._v(\" \"),e(\"p\",[t._v(\"状态转移方程也不难写\"),e(\"code\",[t._v(\"dp[i] = Math.max(dp[i - 2] + nums[i - 2], dp[i - 1]);\")]),t._v(\"（注：这里为了方便计算，令 \"),e(\"code\",[t._v(\"dp[0]\")]),t._v(\"和 \"),e(\"code\",[t._v(\"dp[1]\")]),t._v(\"都等于 0，所以 \"),e(\"code\",[t._v(\"dp[i]\")]),t._v(\"对应的是 \"),e(\"code\",[t._v(\"nums[i - 2]\")]),t._v(\"）\")]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/198.house-robber.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/198.house-robber.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"移除链表元素\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#移除链表元素\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/remove-linked-list-elements/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"移除链表元素\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/203.remove-linked-list-elements.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/203.remove-linked-list-elements.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"反转链表\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#反转链表\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/reverse-linked-list/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"反转链表\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/206.reverse-linked-list.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/206.reverse-linked-list.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"存在重复元素-ii\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#存在重复元素-ii\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/contains-duplicate-ii/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"存在重复元素 II\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"div\",{staticClass:\"language-js line-numbers-mode\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"/**\\n * @param {number[]} nums\\n * @param {number} k\\n * @return {boolean}\\n */\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//我自己的暴力做法\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// var containsNearbyDuplicate = function(nums, k) {\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//   for(let i = 0;i < nums.length;i++){\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//     for(let j = i+1;j < nums.length;j++){\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//       if(nums[i] === nums[j] && Math.abs(j-i) <= k){\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//         return true\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//       }\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//     }\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//   }\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//   return false;\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// };\")]),t._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"containsNearbyDuplicate\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"nums\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" k\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" obj \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" i \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"i \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\" nums\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"i\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"obj\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"nums\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"!==\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"undefined\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"&&\")]),t._v(\" Math\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"abs\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"i \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"parseInt\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"obj\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"nums\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<=\")]),t._v(\" k\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n      \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"true\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"else\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n      obj\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"nums\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" i\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n  console\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"obj\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"false\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])]),t._v(\" \"),e(\"div\",{staticClass:\"line-numbers-wrapper\"},[e(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"11\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"12\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"13\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"14\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"15\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"16\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"17\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"18\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"19\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"20\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"21\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"22\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"23\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"24\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"25\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"26\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"27\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"28\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"29\")]),e(\"br\")])]),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/219.contains-duplicate-ii.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/219.contains-duplicate-ii.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"翻转二叉树\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#翻转二叉树\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/invert-binary-tree/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\" 翻转二叉树\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/226.invert-binary-tree.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/226.invert-binary-tree.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"二叉树的完全性检验\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二叉树的完全性检验\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/check-completeness-of-a-binary-tree/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"二叉树的完全性检验\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://lucifer.ren/fe-interview/#/./topics/algorthimn/isCompleteBinaryTree\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://lucifer.ren/fe-interview/#/./topics/algorthimn/isCompleteBinaryTree\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"丑数\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#丑数\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/ugly-number/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"丑数\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/263.ugly-number.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/263.ugly-number.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"移动零\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#移动零\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/move-zeroes/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"移动零\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/283.move-zeroes.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/283.move-zeroes.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"_4的幂\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4的幂\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/power-of-four/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"4的幂\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/342.power-of-four.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/342.power-of-four.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"两个数组的交集\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#两个数组的交集\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/intersection-of-two-arrays/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"两个数组的交集\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/349.intersection-of-two-arrays.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/349.intersection-of-two-arrays.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"路径总和-iii\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#路径总和-iii\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/path-sum-iii/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"路径总和 III\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/437.path-sum-iii.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/437.path-sum-iii.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"两整数之和\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#两整数之和\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/sum-of-two-integers/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"两整数之和\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/371.sum-of-two-integers.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/371.sum-of-two-integers.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"分糖果\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#分糖果\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/distribute-candies/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"分糖果\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/575.distribute-candies.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/575.distribute-candies.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"两数相加\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#两数相加\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/add-two-numbers/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"两数相加\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/2.addTwoNumbers.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/2.addTwoNumbers.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"盛最多水的容器\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#盛最多水的容器\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/container-with-most-water/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"盛最多水的容器\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/11.container-with-most-water.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/11.container-with-most-water.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"三数之和\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#三数之和\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/3sum/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"三数之和\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/15.3-sum.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/15.3-sum.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"删除链表的倒数第n个节点\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#删除链表的倒数第n个节点\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"删除链表的倒数第N个节点\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/19.removeNthNodeFromEndofList.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/19.removeNthNodeFromEndofList.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"两两交换链表中的节点\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#两两交换链表中的节点\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/swap-nodes-in-pairs/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"两两交换链表中的节点\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/24.swapNodesInPairs.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/24.swapNodesInPairs.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"环形链表\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#环形链表\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/linked-list-cycle/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"环形链表\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://lucifer.ren/fe-interview/#/./topics/algorthimn/linkedListCycled\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://lucifer.ren/fe-interview/#/./topics/algorthimn/linkedListCycled\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"两数相除\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#两数相除\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/divide-two-integers/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"两数相除\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/29.divide-two-integers.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/29.divide-two-integers.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"下一个排列\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#下一个排列\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/next-permutation/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"下一个排列\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/31.next-permutation.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/31.next-permutation.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"搜索旋转排序数组\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#搜索旋转排序数组\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/search-in-rotated-sorted-array/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"搜索旋转排序数组\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/33.search-in-rotated-sorted-array.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/33.search-in-rotated-sorted-array.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"组合总和\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#组合总和\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/combination-sum/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"组合总和\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/39.combination-sum.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/39.combination-sum.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"组合总和-ii\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#组合总和-ii\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/combination-sum-ii/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"组合总和 II\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/40.combination-sum-ii.md\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"全排列\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#全排列\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/permutations/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"全排列\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"div\",{staticClass:\"language-js line-numbers-mode\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//JS实现全排列\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"permutate\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"str\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" result \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"str\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" left \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" str\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" rest \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" str\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"slice\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" str\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" preResult \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"permutate\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"rest\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" i \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\" preResult\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n      \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" j \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" j \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\" preResult\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" j\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" tmp \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" preResult\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"slice\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" j\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" left \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" preResult\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"slice\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"j\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" preResult\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        result\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"push\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"tmp\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n      \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"else\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"str\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"str\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" result\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\nconsole\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"permutate\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'adb'\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])]),t._v(\" \"),e(\"div\",{staticClass:\"line-numbers-wrapper\"},[e(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"11\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"12\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"13\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"14\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"15\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"16\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"17\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"18\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"19\")]),e(\"br\"),e(\"span\",{staticClass:\"line-number\"},[t._v(\"20\")]),e(\"br\")])]),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/46.permutations.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/46.permutations.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"全排列-ii\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#全排列-ii\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/permutations-ii/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"全排列 II\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/47.permutations-ii.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/47.permutations-ii.md\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"h2\",{attrs:{id:\"旋转图像\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#旋转图像\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://leetcode-cn.com/problems/rotate-image/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"旋转图像\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[e(\"a\",{attrs:{href:\"https://github.com/azl397985856/leetcode/blob/master/problems/48.rotate-image.md\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"https://github.com/azl397985856/leetcode/blob/master/problems/48.rotate-image.md\"),e(\"OutboundLink\")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);","extractedComments":[]}