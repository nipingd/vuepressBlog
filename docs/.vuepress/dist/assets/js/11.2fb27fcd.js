(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{478:function(t,s,e){t.exports=e.p+"assets/img/1567819744385.d24dbd16.png"},479:function(t,s,e){t.exports=e.p+"assets/img/1567819217710.16fe45d1.png"},480:function(t,s,e){t.exports=e.p+"assets/img/1567819729101.d24dbd16.png"},481:function(t,s,e){t.exports=e.p+"assets/img/1567820187895.61afc817.png"},482:function(t,s,e){t.exports=e.p+"assets/img/1567820205860.24d28e4d.png"},483:function(t,s,e){t.exports=e.p+"assets/img/1567820224301.97487414.png"},484:function(t,s,e){t.exports=e.p+"assets/img/1567820245382.d45bc765.png"},485:function(t,s,e){t.exports=e.p+"assets/img/1567821136125.eb708be3.png"},486:function(t,s,e){t.exports=e.p+"assets/img/1567821160288.7d495774.png"},487:function(t,s,e){t.exports=e.p+"assets/img/1567821486441.5bd40d56.png"},488:function(t,s,e){t.exports=e.p+"assets/img/1567821505927.e44d312c.png"},489:function(t,s,e){t.exports=e.p+"assets/img/1568535674938.5abc2077.png"},490:function(t,s,e){t.exports=e.p+"assets/img/1568535683125.595a86af.png"},491:function(t,s,e){t.exports=e.p+"assets/img/1568535707940.86bd5249.png"},620:function(t,s,e){"use strict";e.r(s);var a=[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"babel的原理是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#babel的原理是什么","aria-hidden":"true"}},[this._v("#")]),this._v(" Babel的原理是什么?")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("解析 Parse: 将代码解析生成抽象语法树( 即AST )，即词法分析与语法分析的过程")]),this._v(" "),s("li",[this._v("转换 Transform: 对于 AST 进行变换一系列的操作，babel 接受得到 AST 并通过 babel-traverse 对其进行遍历，在此过程中进行添加、更新及移除等操作")]),this._v(" "),s("li",[this._v("生成 Generate: 将变换后的 AST 再转换为 JS 代码, 使用到的模块是 babel-generator")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:e(479),alt:"1567819217710"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"如何写一个babel插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何写一个babel插件","aria-hidden":"true"}},[this._v("#")]),this._v(" 如何写一个babel插件?")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("Babel解析成AST，然后插件更改AST，最后由Babel输出代码")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("babel")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    visitor"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" babel "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'babel-core'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" t "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'babel-types'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" visitor "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("BinaryExpression")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" node "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断表达式两边，是否都是数字")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNumericLiteral")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNumericLiteral")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据不同的操作符作运算")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("operator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"+"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"**"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果上面的运算有结果的话")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把表达式节点替换成number字面量")]),t._v("\n      path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceWith")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("numericLiteral")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmodule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("babel")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    visitor\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" babel "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"babel-core"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" babel"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("transform")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"const result = 1 + 2;"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  plugins"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./index"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// const result = 3;")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("与预期一致，那么转换 "),a("code",[t._v("const result = 1 + 2 + 3 + 4 + 5;")]),t._v("呢?\n结果是: "),a("code",[t._v("const result = 3 + 3 + 4 + 5;")]),t._v("\n这就奇怪了，为什么只计算了"),a("code",[t._v("1 + 2")]),t._v("之后，就没有继续往下运算了?\n我们看一下这个表达式的AST树\n"),a("img",{attrs:{src:e(480),alt:"1567819729101"}}),t._v("\n你会发现Babel解析成表达式里面再嵌套表达式。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("表达式( 表达式( 表达式( 表达式(1 + 2) + 3) + 4) + 5)\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("而我们的判断条件并不符合所有的，只符合"),s("code",[this._v("1 + 2")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断表达式两边，是否都是数字")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNumericLiteral")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("left"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNumericLiteral")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("right"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("那么我们得改一改\n第一次计算"),s("code",[this._v("1 + 2")]),this._v("之后，我们会得到这样的表达式")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("表达式( 表达式( 表达式(3 + 3) + 4) + 5)\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("其中 "),s("code",[this._v("3 + 3")]),this._v("又符合了我们的条件， 我们通过向上递归的方式遍历父级节点\n又转换成这样:")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("表达式")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("表达式")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("表达式")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果上面的运算有结果的话")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把表达式节点替换成number字面量")]),t._v("\n      path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceWith")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("numericLiteral")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" parentPath "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentPath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 向上遍历父级节点")]),t._v("\n      parentPath "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" visitor"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("BinaryExpression")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" parentPath"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("到这里，我们就得出了结果 "),e("code",[t._v("const result = 15;")]),t._v("\n那么其他运算呢:\n"),e("code",[t._v("const result = 100 + 10 - 50")]),t._v(" >>> "),e("code",[t._v("const result = 60;")]),t._v(" "),e("code",[t._v("const result = (100 / 2) + 50")]),t._v(" >>> "),e("code",[t._v("const result = 100;")]),t._v(" "),e("code",[t._v("const result = (((100 / 2) + 50 * 2) / 50) ** 2")]),t._v(" >>> "),e("code",[t._v("const result = 9;")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"你的git工作流是怎样的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#你的git工作流是怎样的","aria-hidden":"true"}},[this._v("#")]),this._v(" 你的git工作流是怎样的?")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("table",[e("thead",[e("tr",[e("th",[t._v("名称")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("master")]),t._v(" "),e("td",[t._v("主分支")])]),t._v(" "),e("tr",[e("td",[t._v("develop")]),t._v(" "),e("td",[t._v("主开发分支，包含确定即将发布的代码")])]),t._v(" "),e("tr",[e("td",[t._v("feature")]),t._v(" "),e("td",[t._v("新功能分支，一般一个新功能对应一个分支，对于功能的拆分需要比较合理，以避免一些后面不必要的代码冲突")])]),t._v(" "),e("tr",[e("td",[t._v("release")]),t._v(" "),e("td",[t._v("发布分支，发布时候用的分支，一般测试时候发现的 bug 在这个分支进行修复")])]),t._v(" "),e("tr",[e("td",[t._v("hotfix")]),t._v(" "),e("td",[t._v("hotfix 分支，紧急修 bug 的时候用")])])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ul",[e("li",[t._v("并行开发：GitFlow 可以很方便的实现并行开发：每个新功能都会建立一个新的 "),e("code",[t._v("feature")]),t._v(" 分支，从而和已经完成的功能隔离开来，而且只有在新功能完成开发的情况下，其对应的 "),e("code",[t._v("feature")]),t._v(" 分支才会合并到主开发分支上（也就是我们经常说的 "),e("code",[t._v("develop")]),t._v(" 分支）。另外，如果你正在开发某个功能，同时又有一个新的功能需要开发，你只需要提交当前 "),e("code",[t._v("feature")]),t._v(" 的代码，然后创建另外一个 "),e("code",[t._v("feature")]),t._v(" 分支并完成新功能开发。然后再切回之前的 "),e("code",[t._v("feature")]),t._v(" 分支即可继续完成之前功能的开发。")]),t._v(" "),e("li",[t._v("协作开发：GitFlow 还支持多人协同开发，因为每个 "),e("code",[t._v("feature")]),t._v(" 分支上改动的代码都只是为了让某个新的 "),e("code",[t._v("feature")]),t._v(" 可以独立运行。同时我们也很容易知道每个人都在干啥。")]),t._v(" "),e("li",[t._v("发布阶段：当一个新 "),e("code",[t._v("feature")]),t._v(" 开发完成的时候，它会被合并到 "),e("code",[t._v("develop")]),t._v(" 分支，这个分支主要用来暂时保存那些还没有发布的内容，所以如果需要再开发新的 "),e("code",[t._v("feature")]),t._v("，我们只需要从 "),e("code",[t._v("develop")]),t._v(" 分支创建新分支，即可包含所有已经完成的 "),e("code",[t._v("feature")]),t._v(" 。")]),t._v(" "),e("li",[t._v("支持紧急修复：GitFlow 还包含了 "),e("code",[t._v("hotfix")]),t._v(" 分支。这种类型的分支是从某个已经发布的 tag 上创建出来并做一个紧急的修复，而且这个紧急修复只影响这个已经发布的 tag，而不会影响到你正在开发的新 "),e("code",[t._v("feature")]),t._v("。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("然后就是 GitFlow 最经典的几张流程图，一定要理解：\n"),a("img",{attrs:{src:e(481),alt:"1567820187895"}}),t._v(" "),a("code",[t._v("feature")]),t._v(" 分支都是从 "),a("code",[t._v("develop")]),t._v(" 分支创建，完成后再合并到 "),a("code",[t._v("develop")]),t._v(" 分支上，等待发布。\n"),a("img",{attrs:{src:e(482),alt:"1567820205860"}}),t._v("\n当需要发布时，我们从 "),a("code",[t._v("develop")]),t._v(" 分支创建一个 "),a("code",[t._v("release")]),t._v(" 分支\n"),a("img",{attrs:{src:e(483),alt:"1567820224301"}}),t._v("\n然后这个 "),a("code",[t._v("release")]),t._v(" 分支会发布到测试环境进行测试，如果发现问题就在这个分支直接进行修复。在所有问题修复之前，我们会不停的重复"),a("strong",[t._v("发布->测试->修复->重新发布->重新测试")]),t._v("这个流程。\n发布结束后，这个 "),a("code",[t._v("release")]),t._v(" 分支会合并到 "),a("code",[t._v("develop")]),t._v(" 和 "),a("code",[t._v("master")]),t._v(" 分支，从而保证不会有代码丢失。\n"),a("img",{attrs:{src:e(484),alt:"1567820245382"}}),t._v(" "),a("code",[t._v("master")]),t._v(" 分支只跟踪已经发布的代码，合并到 "),a("code",[t._v("master")]),t._v(" 上的 commit 只能来自 "),a("code",[t._v("release")]),t._v(" 分支和 "),a("code",[t._v("hotfix")]),t._v(" 分支。\n"),a("code",[t._v("hotfix")]),t._v(" 分支的作用是紧急修复一些 Bug。\n它们都是从 "),a("code",[t._v("master")]),t._v(" 分支上的某个 tag 建立，修复结束后再合并到 "),a("code",[t._v("develop")]),t._v(" 和 "),a("code",[t._v("master")]),t._v(" 分支上。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"rebase-与-merge的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rebase-与-merge的区别","aria-hidden":"true"}},[this._v("#")]),this._v(" rebase 与 merge的区别?")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:e(485),alt:"1567821136125"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("merge 特点：自动创建一个新的commit 如果合并的时候遇到冲突，仅需要修改后重新commit")]),this._v(" "),s("li",[this._v("优点："),s("strong",[this._v("记录了真实的commit情况，包括每个分支的详情")])]),this._v(" "),s("li",[this._v("缺点：因为每次merge会自动产生一个merge commit，所以在使用一些git 的GUI tools，特别是"),s("strong",[this._v("commit比较频繁时，看到分支很杂乱。")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:e(486),alt:"1567821160288"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("rebase 特点：会"),s("strong",[this._v("合并之前的commit历史")])]),this._v(" "),s("li",[this._v("优点：得到更简洁的项目历史，去掉了merge commit")]),this._v(" "),s("li",[this._v("缺点：如果合并出现代码问题不容易定位，因为re-write了history")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("因此,当需要"),s("strong",[this._v("保留详细的合并信息的时候建议使用git merge")]),this._v("，特别是需要将分支合并进入master分支时；当发现自己修改某个功能时，频繁进行了git commit提交时，"),s("strong",[this._v("发现其实过多的提交信息没有必要时")]),this._v("，可以尝试git rebase.")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"git高级操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git高级操作","aria-hidden":"true"}},[this._v("#")]),this._v(" git高级操作")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"git-reset、git-revert-和-git-checkout-有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-reset、git-revert-和-git-checkout-有什么区别","aria-hidden":"true"}},[this._v("#")]),this._v(" git reset、git revert 和 git checkout 有什么区别")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("工作区：在 git 管理下的正常目录都算是工作区，我们平时的编辑工作都是在工作区完成")]),this._v(" "),s("li",[this._v("暂存区：临时区域。里面存放将要提交文件的快照")]),this._v(" "),s("li",[this._v("历史记录区：git commit 后的记录区")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:e(487),alt:"1567821486441"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("git reset 可以将一个分支的末端指向之前的一个 commit。然后再下次 git 执行垃圾回收的时候，会把这个 commit 之后的 commit 都扔掉。git reset 还支持三种标记，用来标记 reset 指令影响的范围：\n"),s("ul",[s("li",[this._v("--mixed：会影响到暂存区和历史记录区。也是默认选项")]),this._v(" "),s("li",[this._v("--soft：只影响历史记录区")]),this._v(" "),s("li",[this._v("--hard：影响工作区、暂存区和历史记录区")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("注意：因为 git reset 是直接删除 commit 记录，从而会影响到其他开发人员的分支，所以不要在公共分支（比如 develop）做这个操作。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("git checkout 可以将 HEAD 移到一个新的分支，并更新工作目录。因为可能会覆盖本地的修改，所以执行这个指令之前，你需要 stash 或者 commit 暂存区和工作区的更改。")]),this._v(" "),s("li",[this._v("git revert 和 git reset 的目的是一样的，但是做法不同，它会以创建新的 commit 的方式来撤销 commit，这样能保留之前的 commit 历史，比较安全。另外，同样因为可能会覆盖本地的修改，所以执行这个指令之前，你需要 stash 或者 commit 暂存区和工作区的更改。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("然后，从文件层面来说：")]),this._v(" "),s("ul",[s("li",[this._v("git reset 只是把文件从历史记录区拿到暂存区，不影响工作区的内容，而且不支持 --mixed、--soft 和 --hard。")]),this._v(" "),s("li",[this._v("git checkout 则是把文件从历史记录拿到工作区，不影响暂存区的内容。")]),this._v(" "),s("li",[this._v("git revert 不支持文件层面的操作。")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:e(488),alt:"1567821505927"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"rebase-合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rebase-合并","aria-hidden":"true"}},[this._v("#")]),this._v(" Rebase 合并")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("该命令可以让和 "),s("code",[this._v("merge")]),this._v(" 命令得到的结果基本是一致的。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("通常使用 "),s("code",[this._v("merge")]),this._v(" 操作将分支上的代码合并到 "),s("code",[this._v("master")]),this._v(" 中，分支样子如下所示")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:e(489),alt:"1568535674938"}})])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("使用 "),e("code",[t._v("rebase")]),t._v(" 后，会将 "),e("code",[t._v("develop")]),t._v(" 上的 "),e("code",[t._v("commit")]),t._v(" 按顺序移到 "),e("code",[t._v("master")]),t._v(" 的第三个 "),e("code",[t._v("commit")]),t._v(" 后面，分支样子如下所示")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:e(490),alt:"1568535683125"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("使用 rebase 应该在需要被 rebase 的分支上操作，并且该分支是本地分支。如果 "),s("code",[this._v("develop")]),this._v(" 分支需要 rebase 到 "),s("code",[this._v("master")]),this._v(" 上去，那么应该如下操作")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("## branch develop\ngit rebase master\ngit checkout master\n## 用于将 `master` 上的 HEAD 移动到最新的 commit\ngit merge develop\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br"),s("span",{staticClass:"line-number"},[this._v("3")]),s("br"),s("span",{staticClass:"line-number"},[this._v("4")]),s("br"),s("span",{staticClass:"line-number"},[this._v("5")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"stash"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stash","aria-hidden":"true"}},[this._v("#")]),this._v(" stash")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("stash")]),this._v(" 用于临时保存工作目录的改动。开发中可能会遇到代码写一半需要切分支打包的问题，如果这时候你不想 "),s("code",[this._v("commit")]),this._v(" 的话，就可以使用该命令。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("git stash\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("git stash pop\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"reflog"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reflog","aria-hidden":"true"}},[this._v("#")]),this._v(" reflog")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("reflog")]),this._v(" 可以看到 HEAD 的移动记录，假如之前误删了一个分支，可以通过 "),s("code",[this._v("git reflog")]),this._v(" 看到移动 HEAD 的哈希值")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:e(491),alt:"1568535707940"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("从图中可以看出，HEAD 的最后一次移动行为是 "),s("code",[this._v("merge")]),this._v(" 后，接下来分支 "),s("code",[this._v("new")]),this._v(" 就被删除了，那么我们可以通过以下命令找回 "),s("code",[this._v("new")]),this._v(" 分支")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("git checkout 37d9aca\ngit checkout -b new\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("PS："),s("code",[this._v("reflog")]),this._v(" 记录是时效的，只会保存一段时间内的记录。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"reset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reset","aria-hidden":"true"}},[this._v("#")]),this._v(" Reset")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-text line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("git reset --hard HEAD^\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("但是 "),s("code",[this._v("reset")]),this._v(" 的本质并不是删除了 commit，而是重新设置了 HEAD 和它指向的 branch。")])}],n=e(0),r=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p",[t._v("babel 的转译过程也分为三个阶段，这三步具体是：")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),a("blockquote",[a("p",[t._v("更具体的原理可以移步"),a("a",{attrs:{href:"https://www.cxymsg.com/guide/ast.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何写一个babel"),a("OutboundLink")],1)])]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),a("p",[t._v("那么Babel的插件模块需要你暴露一个function，function内返回visitor")]),t._v(" "),t._m(5),a("p",[t._v("visitor是对各类型的AST节点做处理的地方，那么我们怎么知道Babel生成了的AST有哪些节点呢？\n很简单，你可以把Babel转换的结果打印出来，或者这里有传送门: "),a("a",{attrs:{href:"https://astexplorer.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("AST explorer"),a("OutboundLink")],1),t._v(" "),a("img",{attrs:{src:e(478),alt:"1567819744385"}}),t._v("\n这里我们看到 "),a("code",[t._v("const result = 1 + 2")]),t._v("中的"),a("code",[t._v("1 + 1")]),t._v("是一个"),a("code",[t._v("BinaryExpression")]),t._v("节点，那么在visitor中，我们就处理这个节点")]),t._v(" "),t._m(6),a("p",[t._v("插件写好了，我们运行下插件试试")]),t._v(" "),t._m(7),t._m(8),t._v(" "),t._m(9),t._m(10),t._v(" "),t._m(11),t._m(12),t._v(" "),t._m(13),t._m(14),t._v(" "),t._m(15),t._m(16),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://github.com/axetroy/babel-plugin-pre-calculate-number",target:"_blank",rel:"noopener noreferrer"}},[t._v("项目地址"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("上述答案来源于cnode"),a("a",{attrs:{href:"https://cnodejs.org/topic/5a9317d38d6e16e56bb808d1",target:"_blank",rel:"noopener noreferrer"}},[t._v("帖子"),a("OutboundLink")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("更详实的教程移步"),a("a",{attrs:{href:"https://github.com/jamiebuilds/babel-handbook/blob/master/translations/zh-Hans/plugin-handbook.md#builders",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方的插件教程"),a("OutboundLink")],1)])]),t._v(" "),t._m(17),t._v(" "),a("p",[t._v("GitFlow 是由 Vincent Driessen 提出的一个 git操作流程标准。包含如下几个关键分支：")]),t._v(" "),t._m(18),t._v(" "),a("p",[t._v("GitFlow 的优势有如下几点：")]),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),a("blockquote",[a("p",[t._v("更多工作流可以参考阮老师的"),a("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2015/12/git-workflow.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 工作流程"),a("OutboundLink")],1)])]),t._v(" "),t._m(21),t._v(" "),a("p",[t._v("git rebase 和 git merge 一样都是用于从一个分支获取并且合并到当前分支.")]),t._v(" "),a("p",[t._v("假设一个场景,就是我们开发的[feature/todo]分支要合并到master主分支,那么用rebase或者merge有什么不同呢?")]),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),a("p",[t._v("这个问题同样也需要先了解 git 仓库的三个组成部分：工作区（Working Directory）、暂存区（Stage）和历史记录区（History）。")]),t._v(" "),t._m(29),t._v(" "),a("p",[t._v("三个区的转换关系以及转换所使用的命令：")]),t._v(" "),t._m(30),t._v(" "),a("p",[t._v("git reset、git revert 和 git checkout的共同点：用来撤销代码仓库中的某些更改。")]),t._v(" "),a("p",[t._v("然后是不同点：")]),t._v(" "),a("p",[t._v("首先，从 commit 层面来说：")]),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),t._m(39),t._v(" "),t._m(40),t._v(" "),t._m(41),t._v(" "),a("p",[t._v("Rebase 对比 merge，优势在于合并后的结果很清晰，只有一条线，劣势在于如果一旦出现冲突，解决冲突很麻烦，可能要解决多个冲突，但是 merge 出现冲突只需要解决一次。")]),t._v(" "),t._m(42),t._v(" "),t._m(43),t._m(44),t._v(" "),t._m(45),t._v(" "),t._m(46),a("p",[t._v("使用该命令可以暂存你的工作目录，后面想恢复工作目录，只需要使用")]),t._v(" "),t._m(47),a("p",[t._v("这样你之前临时保存的代码又回来了")]),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),t._m(50),t._v(" "),t._m(51),t._v(" "),t._m(52),t._m(53),t._v(" "),t._m(54),t._v(" "),a("p",[t._v("如果你想删除刚写的 commit，就可以通过以下命令实现")]),t._v(" "),t._m(55),t._m(56)])},a,!1,null,null,null);s.default=r.exports}}]);