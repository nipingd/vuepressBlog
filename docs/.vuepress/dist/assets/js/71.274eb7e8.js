(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{476:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("p",[t._v("转载自：https://juejin.im/post/5b61b0f86fb9a04fd343af8f#heading-12")]),t._v(" "),t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),a("p",[t._v("可以使用字面量形式或者new的方式来创建正则表达式")]),t._v(" "),t._m(3),t._m(4),t._v(" "),t._m(5),t._m(6),t._v(" "),t._m(7),t._v(" "),a("p",[t._v("修饰符表示正则表达式的匹配模式")]),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._m(38),t._v(" "),t._m(39),t._v(" "),t._m(40),t._v(" "),t._m(41),a("p",[t._v("现在可以通过指定分组的名称，增加代码可读性，便于维护：")]),t._v(" "),t._m(42),t._m(43),t._v(" "),t._m(44),t._m(45),t._v(" "),t._m(46),t._v(" "),t._m(47),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),t._m(50),t._m(51),t._v(" "),t._m(52),t._v(" "),t._m(53),t._v(" "),t._m(54),t._v(" "),t._m(55),t._v(" "),t._m(56),t._m(57),t._v(" "),t._m(58),t._v(" "),t._m(59),t._m(60),t._v(" "),t._m(61),t._v(" "),t._m(62),t._v(" "),t._m(63),t._v(" "),a("p",[t._v("RegExp构造函数上也包含一些属性，这些属性适用于作用域中所有的正则表达式，并且基于所执行的最近一次正则表达式操作而变化，这些属性分别有一个长属性名和短属性名")]),t._v(" "),t._m(64),t._v(" "),t._m(65),t._v(" "),t._m(66),t._v(" "),t._m(67),t._v(" "),t._m(68),t._v(" "),t._m(69),t._v(" "),t._m(70),t._m(71),t._v(" "),a("p",[t._v("使用正则表达式对字符串执行搜索，并将更新全局RegExp对象的属性以反映匹配结果")]),t._v(" "),a("p",[t._v("如果匹配失败，exec() 方法返回 null")]),t._v(" "),a("p",[t._v("如果匹配成功，exec() 方法返回一个数组，并更新正则表达式对象的属性")]),t._v(" "),t._m(72),t._v(" "),a("p",[t._v("要注意的是：")]),t._v(" "),t._m(73),t._v(" "),t._m(74),t._m(75),t._v(" "),a("p",[t._v("search() 方法用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串 方法返回第一个匹配结果的index，查找不到返回-1 search() 方法不执行全局匹配，它将忽略修饰符g，并且总是从字符串的开始进行检索")]),t._v(" "),t._m(76),t._v(" "),a("p",[t._v("split() 方法一般用来分割字符串成数组，也可以传入正则表达式，使用正则可以避免一些传入字符串解决不了的问题")]),t._v(" "),t._m(77),t._m(78),t._v(" "),t._m(79),t._v(" "),t._m(80),t._m(81),t._v(" "),t._m(82),t._v(" "),a("p",[t._v("找到匹配并替换，传入string、number比较常见，这里传入回调function是比较高级的用法，这里可以参考"),a("a",{attrs:{href:"https://link.juejin.im?target=https%3A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FJavaScript%2FReference%2FGlobal_Objects%2FString%2Freplace%23%E6%8C%87%E5%AE%9A%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E4%BD%9C%E4%B8%BA%E5%8F%82%E6%95%B0",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("比如一个场景，把手机号的中间4位换成*")]),t._v(" "),t._m(83),a("p",[t._v("也可以不返回值，用回调来遍历，比如一个在面试中会遇到的问题：找出重复最多的字符")]),t._v(" "),t._m(84),a("p",[t._v("作者：SHERlocked93")]),t._v(" "),a("p",[t._v("链接：https://juejin.im/post/5b61b0f86fb9a04fd343af8f")]),t._v(" "),a("p",[t._v("来源：掘金著作权归作者所有。")])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_1-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介","aria-hidden":"true"}},[this._v("#")]),this._v(" 1. 简介")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("正则表达式")]),this._v("(Regular Expression) 是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、及这些特定字符的组合，组成一个规则字符串，这个规则字符串用来表达对字符串的一种过滤逻辑。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("简单来说就是：按照某种规则去匹配符合条件的字符串。正则表达式的规则是"),s("code",[this._v("/ pattern / flags")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用直接字面量创建 ，推荐使用，性能更好，注意这里pattern不能为空，不然以为是注释")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" exp1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d/g")]),t._v(" \n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用RegExp对象创建")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" exp2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegExp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'g'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("模式中使用的所有"),s("strong",[this._v("元字符")]),this._v("都建议在之前加"),s("code",[this._v("\\")]),this._v("转义，正则表达式中的元字符包括：")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \\ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" $ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_2-内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-内容","aria-hidden":"true"}},[this._v("#")]),this._v(" 2. 内容")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_2-1-匹配模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-匹配模式","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.1 匹配模式")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",[t._v("修饰符")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("i")]),t._v(" "),a("td",[t._v("执行对大小写不敏感的匹配")])]),t._v(" "),a("tr",[a("td",[t._v("g")]),t._v(" "),a("td",[t._v("执行全局匹配，查找所有匹配而非在找到第一个匹配后停止")])]),t._v(" "),a("tr",[a("td",[t._v("m")]),t._v(" "),a("td",[t._v("执行多行匹配，会改变"),a("code",[t._v("^")]),t._v("和"),a("code",[t._v("$")]),t._v("的行为")])]),t._v(" "),a("tr",[a("td",[t._v("u")]),t._v(" "),a("td",[t._v("可以匹配4字节的unicode编码")])]),t._v(" "),a("tr",[a("td",[t._v("s (ES9)")]),t._v(" "),a("td",[t._v("dotAll模式，"),a("code",[t._v(".")]),t._v("可以匹配换行符")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("加了u修饰符，会正确处理大于"),s("code",[this._v("\\uFFFF")]),this._v("的unicode，比如4字节的🐪 "),s("code",[this._v("\\uD83D\\uDC2A")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/^\\uD83D/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\uD83D\\uDC2A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("\\uD83D"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("u"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\uD83D\\uDC2A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("默认情况下，"),s("code",[this._v(".")]),this._v("可以匹配任意字符，除了换行符，且"),s("code",[this._v(".")]),this._v("不能匹配Unicode字符，需要使用u选项启用Unicode模式才行。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("ES2018引入了dotAll模式，通过s选项可以启用，这样，"),s("code",[this._v(".")]),this._v("就可以匹配换行符了。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/foo.bar/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo\\nbar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo\\nbar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_2-2-类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-类","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.2 类")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("类")]),this._v("使用"),s("code",[this._v("[ ]")]),this._v("来表达，用于查找某个范围内的字符")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",[t._v("表达式")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("[abc]")])]),t._v(" "),a("td",[t._v("查找方括号之间的任何字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("[0-9]")])]),t._v(" "),a("td",[t._v("查找任何从 0 至 9 的数字")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("还有一些"),s("strong",[this._v("预定义类")]),this._v("方便我们直接使用：")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",[t._v("预定义类")]),t._v(" "),a("th",[t._v("等价")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("\\s")])]),t._v(" "),a("td",[a("code",[t._v("[\\t\\n\\x0B\\f\\r]")])]),t._v(" "),a("td",[t._v("空格")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\S")])]),t._v(" "),a("td",[a("code",[t._v("[^\\t\\n\\x0B\\f\\r]")])]),t._v(" "),a("td",[t._v("非空格")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\d")])]),t._v(" "),a("td",[a("code",[t._v("[0-9]")])]),t._v(" "),a("td",[t._v("数字")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\D")])]),t._v(" "),a("td",[a("code",[t._v("[^0-9]")])]),t._v(" "),a("td",[t._v("非数字")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\w")])]),t._v(" "),a("td",[a("code",[t._v("[a-zA-Z_0-9]")])]),t._v(" "),a("td",[t._v("单词字符 ( 字母、数字、下划线)")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\W")])]),t._v(" "),a("td",[a("code",[t._v("[^a-zA-Z_0-9]")])]),t._v(" "),a("td",[t._v("非单词字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v(".")])]),t._v(" "),a("td",[a("code",[t._v("[^\\r\\n]")])]),t._v(" "),a("td",[t._v("任意字符，除了回车与换行外所有字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\f")])]),t._v(" "),a("td",[a("code",[t._v("\\x0c")]),t._v(" "),a("code",[t._v("\\cL")])]),t._v(" "),a("td",[t._v("匹配一个换页符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\n")])]),t._v(" "),a("td",[a("code",[t._v("\\x0a")]),t._v(" "),a("code",[t._v("\\cJ")])]),t._v(" "),a("td",[t._v("匹配一个换行符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\r")])]),t._v(" "),a("td",[a("code",[t._v("\\x0d")]),t._v(" "),a("code",[t._v("\\cM")])]),t._v(" "),a("td",[t._v("匹配一个回车符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\t")])]),t._v(" "),a("td",[a("code",[t._v("\\x09")]),t._v(" "),a("code",[t._v("\\cI")])]),t._v(" "),a("td",[t._v("匹配一个制表符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\v")])]),t._v(" "),a("td",[a("code",[t._v("\\x0b")]),t._v(" "),a("code",[t._v("\\cK")])]),t._v(" "),a("td",[t._v("匹配一个垂直制表符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\xxx")])]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("查找以八进制数 xxx 规定的字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\xdd")])]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("查找以十六进制数 dd 规定的字符")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\uxxxx")])]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("查找以十六进制数 xxxx 规定的 Unicode 字符")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_2-3-量词"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-量词","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.3 量词")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("量词")]),this._v("表示匹配多少个目标对象，精确匹配长度使用"),s("code",[this._v("{ }")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",[t._v("量词")]),t._v(" "),a("th",[t._v("等价")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("n"),a("code",[t._v("*")])]),t._v(" "),a("td",[a("code",[t._v("{0,}")])]),t._v(" "),a("td",[t._v("匹配零个或多个n")])]),t._v(" "),a("tr",[a("td",[t._v("n"),a("code",[t._v("+")])]),t._v(" "),a("td",[a("code",[t._v("{1,}")])]),t._v(" "),a("td",[t._v("匹配至少一个 n 的字符串")])]),t._v(" "),a("tr",[a("td",[t._v("n"),a("code",[t._v("?")])]),t._v(" "),a("td",[a("code",[t._v("{0,1}")])]),t._v(" "),a("td",[t._v("匹配零个或一个n")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("{n}")])]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("匹配n次")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("{n,m}")])]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("匹配n到m次")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("{n,}")])]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("至少匹配n次")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_2-4-边界"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-边界","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.4 边界")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",[t._v("边界")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("^")])]),t._v(" "),a("td",[t._v("以xx开始，在类"),a("code",[t._v("[ ]")]),t._v("中表示非")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("$")])]),t._v(" "),a("td",[t._v("以xx结束")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\b")])]),t._v(" "),a("td",[t._v("单词边界")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("\\B")])]),t._v(" "),a("td",[t._v("非单词边界")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("^")]),this._v("匹配字符串开始位置，也就是位置0，如果设置了 RegExp 对象的 Multiline 属性"),s("code",[this._v("m")]),this._v("，"),s("code",[this._v("^")]),this._v(" 也匹配 '\\n' 或 '\\r' 之后的位置")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("$")]),this._v("一般匹配字符串结束位置，如果设置了 RegExp 对象的 Multiline 属性"),s("code",[this._v("m")]),this._v("，"),s("code",[this._v("$")]),this._v(" 也匹配 '\\n' 或 '\\r' 之前的位置")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[a("code",[t._v("\\b")]),t._v("匹配一个单词边界，也就是指单词和空格间的位置，如"),a("code",[t._v("er\\b")]),t._v("可以匹配\"never\" 中的 'er'，但不能匹配 \"verb\" 中的 'er' "),a("code",[t._v("\\B")]),t._v("匹配非单词边界。如"),a("code",[t._v("er\\B")]),t._v("能匹配 \"verb\" 中的 'er'，但不能匹配 \"never\" 中的 'er'")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_2-5-分组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-分组","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.5 分组")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[a("strong",[t._v("分组")]),t._v("使用"),a("code",[t._v("( )")]),t._v("，作用是提取相匹配的字符串，使量词作用于分组 比如"),a("code",[t._v("hehe{3}")]),t._v("是把"),a("code",[t._v("e")]),t._v("匹配了3次而不是单词，如果希望作用于单词，可以使用分组"),a("code",[t._v("(hehe){3}")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"或"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#或","aria-hidden":"true"}},[this._v("#")]),this._v(" 或")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("分组中使用 "),s("code",[this._v("|")]),this._v(" 可以达到"),s("strong",[this._v("或")]),this._v("的效果 比如："),s("code",[this._v("T(oo|ii)m")]),this._v("可以匹配 Toom 和 Tiim")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`abToomhaTiimmm`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/T(oo|ii)m/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ab-ha-mm")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"反向引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#反向引用","aria-hidden":"true"}},[this._v("#")]),this._v(" 反向引用")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("使用"),s("code",[this._v("( )")]),this._v("后可以使用"),s("code",[this._v("$1")]),this._v("-"),s("code",[this._v("$9")]),this._v("等来匹配")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2018-02-11'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(\\d{4})\\-(\\d{2})\\-(\\d{2})/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$2/$3/$1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("            \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  02/11/2018")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"后向引用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后向引用","aria-hidden":"true"}},[this._v("#")]),this._v(" 后向引用")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[a("code",[t._v("\\n")]),t._v(" 表示后向引用，"),a("code",[t._v("\\1")]),t._v("是指在正则表达式中，从左往右数第1个"),a("code",[t._v("( )")]),t._v("中的内容；以此类推，"),a("code",[t._v("\\2")]),t._v("表示第2个"),a("code",[t._v("( )")]),t._v("，"),a("code",[t._v("\\0")]),t._v("表示整个表达式。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配日期格式，表达式中的\\1代表重复(\\-|\\/|.)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" rgx "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{4}(\\-|\\/|.)\\d{1,2}\\1\\d{1,2}/")]),t._v("\nrgx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2016-03-26"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nrgx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2016-03.26"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("后向引用和反向引用的区别是："),s("strong",[s("code",[this._v("\\n")]),this._v("只能用在表达式中，而"),s("code",[this._v("$n")]),this._v("只能用在表达式之外的地方。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"分组命名-es9"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分组命名-es9","aria-hidden":"true"}},[this._v("#")]),this._v(" 分组命名 (ES9)")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("ES2018")]),this._v(" 之前的分组是通过数字命名的：")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pattern "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(\\d{4})-(\\d{2})-(\\d{2})/u")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2018-10-25'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印"2018-10-25"')]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印"2018"')]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印"10"')]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印"25"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pattern "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})/u")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2018-10-25'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("groups"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("year"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印"2018"')]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("groups"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("month"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印"10"')]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("groups"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("day"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印"25"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("分组命名还可以和"),s("code",[this._v("String.prototype.replace")]),this._v("方法结合：")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" reDate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2018-10-25'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" USADate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("reDate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$<month>-$<day>-$<year>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("USADate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10-25-2018")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"忽略分组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#忽略分组","aria-hidden":"true"}},[this._v("#")]),this._v(" 忽略分组")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如果不希望捕获某些分组，在分组内加上"),s("code",[this._v("?:")]),this._v("即可 比如"),s("code",[this._v("(?:tom).(ok)")]),this._v("那么这里"),s("code",[this._v("$1")]),this._v("指的就是ok")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"前瞻"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前瞻","aria-hidden":"true"}},[this._v("#")]),this._v(" 前瞻")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("前瞻")]),this._v(" Lookahead 是RegExp匹配到规则的时候，向后检查是否符合断言，后顾JS目前不支持 (ES2018已经支持)")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("正则")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("正向前瞻")]),t._v(" "),a("td",[a("code",[t._v("(?= )")])]),t._v(" "),a("td",[t._v("后面要有xx")])]),t._v(" "),a("tr",[a("td",[t._v("负向前瞻")]),t._v(" "),a("td",[a("code",[t._v("(?! )")])]),t._v(" "),a("td",[t._v("后面不能有xx")])])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1a2bc*456v8'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\w(?=\\d)/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  1-2bc*--6-8    匹配后面是数字的单词字符")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1a2bc*456v8'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\w(?!\\d)/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  -a---*45-v-    匹配后面不是数字的单词字符")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pattern1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+(?= dollars)/u")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正向前瞻，匹配字符串中紧跟着是dollars的数字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'42 dollars'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印42")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pattern2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d+(?! dollars)/u")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 负向前瞻，匹配字符串中紧跟着的不是dollars的数字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'42 pesos'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印42")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("(?=exp)")]),this._v("匹配一个位置，这个位置的右边能匹配表达式exp，注意这个表达式仅仅匹配一个位置，只是它对于这个位置的右边有要求，而右边的东西是不会被放进结果的，比如用"),s("code",[this._v("read(?=ing)")]),this._v('去匹配"reading"，结果是"read"，而"ing"是不会放进结果的。')])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("举个栗子，对密码应用以下限制：其长度必须介于 4 到 8 个字符之间，并且必须至少包含一个数字，正则是"),s("code",[this._v("/^(?=.*\\d).{4,8}$/")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"后顾-es9"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后顾-es9","aria-hidden":"true"}},[this._v("#")]),this._v(" 后顾 (ES9)")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("strong",[this._v("后顾")]),this._v(" Lookbehind 是RegExp匹配到规则的时候，向前检查是否符合断言")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",[t._v("名称")]),t._v(" "),a("th",[t._v("正则")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("正向后顾")]),t._v(" "),a("td",[a("code",[t._v("(?<= )")])]),t._v(" "),a("td",[t._v("前面要有xx")])]),t._v(" "),a("tr",[a("td",[t._v("负向后顾")]),t._v(" "),a("td",[a("code",[t._v("(?<! )")])]),t._v(" "),a("td",[t._v("前面不能有xx")])])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pattern1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<=\\$)\\d+/u")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 正向后顾，匹配字符串中前面是\\$的数字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$42'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印42 ")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pattern2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/(?<!\\$)\\d+/u")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 负向后顾，匹配字符串中前面不是是\\$的数字")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'€42'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印42")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_2-6-贪婪模式-与-非贪婪模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-贪婪模式-与-非贪婪模式","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.6 贪婪模式 与 非贪婪模式")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("😄正则表达式在匹配的时候默认会尽可能多的匹配，叫"),a("strong",[t._v("贪婪模式")]),t._v("。通过在限定符后加"),a("code",[t._v("?")]),t._v("可以进行非贪婪匹配 比如"),a("code",[t._v("\\d{3,6}")]),t._v("默认会匹配6个数字而不是3个，在量词"),a("code",[t._v("{ }")]),t._v("后加一个"),a("code",[t._v("?")]),t._v("就可以修改成"),a("strong",[t._v("非贪婪模式")]),t._v("，匹配3次")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`12345678`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{3,6}/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -78")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`12345678`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d{3,6}?/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -45678")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abbbb'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/ab+?/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  -bbb")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_2-7-优先级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-优先级","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.7 优先级")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("优先级从高到低：")]),t._v(" "),a("ol",[a("li",[t._v("转义 "),a("code",[t._v("\\")])]),t._v(" "),a("li",[t._v("括号"),a("code",[t._v("( )")]),t._v("、"),a("code",[t._v("(?: )")]),t._v("、"),a("code",[t._v("(?= )")]),t._v("、"),a("code",[t._v("[ ]")])]),t._v(" "),a("li",[t._v("字符和位置")]),t._v(" "),a("li",[t._v("或 "),a("code",[t._v("|")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_3-常用属性与方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-常用属性与方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 3. 常用属性与方法")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-1-regexp构造函数属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-regexp构造函数属性","aria-hidden":"true"}},[this._v("#")]),this._v(" 3.1 RegExp构造函数属性")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",[t._v("长属性名")]),t._v(" "),a("th",[t._v("短属性名")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("input")]),t._v(" "),a("td",[a("code",[t._v("$_")])]),t._v(" "),a("td",[t._v("返回执行规范表述查找的字符串。只读")])]),t._v(" "),a("tr",[a("td",[t._v("lastMatch")]),t._v(" "),a("td",[a("code",[t._v("$&")])]),t._v(" "),a("td",[t._v("返回任何正则表达式搜索过程中的最后匹配的字符。只读")])]),t._v(" "),a("tr",[a("td",[t._v("lastParen")]),t._v(" "),a("td",[a("code",[t._v("$+")])]),t._v(" "),a("td",[t._v("如果有的话，返回任何正则表达式查找过程中最后括的子(分组)匹配。只读")])]),t._v(" "),a("tr",[a("td",[t._v("leftContext")]),t._v(" "),a("td",[a("code",[t._v("$\\")])]),t._v(" "),a("td",[t._v("返回被查找的字符串中从字符串开始位置到最后匹配之前的位置之间的字符。只读")])]),t._v(" "),a("tr",[a("td",[t._v("rightContext")]),t._v(" "),a("td",[a("code",[t._v("$'")])]),t._v(" "),a("td",[t._v("返回被搜索的字符串中从最后一个匹配位置开始到字符串结尾之间的字符。只读")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-2-regexp实例上的属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-regexp实例上的属性","aria-hidden":"true"}},[this._v("#")]),this._v(" 3.2 RegExp实例上的属性")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("table",[a("thead",[a("tr",[a("th",[t._v("属性")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("global")]),t._v(" "),a("td",[t._v("是否全文搜索，默认"),a("code",[t._v("false")]),t._v("，对应修饰符的"),a("code",[t._v("g")]),t._v("，只读")])]),t._v(" "),a("tr",[a("td",[t._v("ignoreCase")]),t._v(" "),a("td",[t._v("是否大小写敏感，默认"),a("code",[t._v("false")]),t._v("，对应修饰符"),a("code",[t._v("i")]),t._v("，只读")])]),t._v(" "),a("tr",[a("td",[t._v("multiline")]),t._v(" "),a("td",[t._v("是否多行搜索，默认"),a("code",[t._v("false")]),t._v("，对应修饰符"),a("code",[t._v("m")]),t._v("，只读")])]),t._v(" "),a("tr",[a("td",[t._v("flags")]),t._v(" "),a("td",[t._v("返回修饰符，只读")])]),t._v(" "),a("tr",[a("td",[t._v("lastIndex")]),t._v(" "),a("td",[t._v("当前表达式匹配内容的最后一个字符的下一个位置")])]),t._v(" "),a("tr",[a("td",[t._v("source")]),t._v(" "),a("td",[t._v("正则表达式的文本字符串")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-3-常用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-常用方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 3.3 常用方法")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"regexp-prototype-test-str"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#regexp-prototype-test-str","aria-hidden":"true"}},[this._v("#")]),this._v(" RegExp.prototype.test(str)")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("测试字符串参数中是否存在匹配正则表达式的字符串，使用.test的时候如果修饰符有"),s("code",[this._v("g")]),this._v("，那么会正则会记住lastIndex并在下一次执行的时候从lastIndex处开始检测，如果只是为了测试是否符合正则，可以不用"),s("code",[this._v("g")]),this._v("或者每次都重新实例化正则表达式")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" reg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\w/g")]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  true")]),t._v("\nreg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"regexp-prototype-exec-str"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#regexp-prototype-exec-str","aria-hidden":"true"}},[this._v("#")]),this._v(" RegExp.prototype.exec(str)")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("数组索引0：匹配的全部字符串")]),this._v(" "),s("li",[this._v("数组索引1,2..n：括号中的分组捕获")]),this._v(" "),s("li",[this._v("index：属性是匹配文本的第一个字符的位置")]),this._v(" "),s("li",[this._v("input：存放被检索的字符串")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("exec()永远只返回一个匹配项（指匹配整个正则的）")]),this._v(" "),s("li",[this._v("如果设置了g修饰符，每次调用exec()会在字符串中继续查找新匹配项，不设置g修饰符，对一个字符串每次调用exec()永远只返回第一个匹配项。所以如果要匹配一个字符串中的所有需要匹配的地方，那么可以设置g修饰符，然后通过循环不断调用exec方法。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配所有ing结尾的单词")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Reading and Writing"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" pattern"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\b([a-zA-Z]+)ing\\b/g")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" matches\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matches"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matches"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" matches"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" matches"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("matches"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Reading and Writing")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0 Reading Read")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 12 Writing Writ")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"string-prototype-search-reg"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-search-reg","aria-hidden":"true"}},[this._v("#")]),this._v(" String.prototype.search(reg)")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"string-prototype-split-reg"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-split-reg","aria-hidden":"true"}},[this._v("#")]),this._v(" String.prototype.split(reg)")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a1b2c3d4e'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\d/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//  ["a", "b", "c", "d", "e"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a b   c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['a', 'b', '', '', 'c']   无法识别连续空格")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a b   c'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[t._v("/\\s*/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ['a', 'b', 'c']")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"string-prototype-match-reg"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-match-reg","aria-hidden":"true"}},[this._v("#")]),this._v(" String.prototype.match(reg)")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("match() 方法将检索字符串，以找到一个或多个与reg相匹配的文本，reg是否有修饰符"),s("code",[this._v("g")]),this._v("影响很大 返回值与"),s("code",[this._v("RegExp.prototype.exec")]),this._v("的返回类似，不过只返回匹配的字符串数组")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v('\'cdbbdbsdbdbzddzdbbbd\'.match(/d(b+)d/g)              //   ["dbbd", "dbd", "dbbbd"]\n\'cdbbdbsdbdbzddzdbbbd\'.match(/d(b+)d/)             //   ["dbbd", "bb", index: 1, input: "cdbbdbsdbdbzddzdbbbd"]\n复制代码\n')])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br"),s("span",{staticClass:"line-number"},[this._v("3")]),s("br")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如果修饰符有"),s("code",[this._v("g")]),this._v("则匹配出所有匹配的数组，如果不是，则出第一个匹配的字符串，以及相应的捕获内容")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"string-prototype-replace-reg-str-num-function"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-prototype-replace-reg-str-num-function","aria-hidden":"true"}},[this._v("#")]),this._v(" String.prototype. replace (reg, str | num | function)")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("function validateMobile(str) {\n  return /^[1][0-9]{10}$/.test(str) &&\n      str.replace(/(\\d{3})(\\d{4})(\\d{4})/, (rs, $1, $2, $3) => `${$1}****${$3}`)\n}\n复制代码\n")])]),this._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[this._v("1")]),s("br"),s("span",{staticClass:"line-number"},[this._v("2")]),s("br"),s("span",{staticClass:"line-number"},[this._v("3")]),s("br"),s("span",{staticClass:"line-number"},[this._v("4")]),s("br"),s("span",{staticClass:"line-number"},[this._v("5")]),s("br")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("let str = 'asss23sjdssskssa7lsssdkjsssdss'\n \nconst arr = str.split(/\\s*/)              // 把字符串转换为数组\nconst str2 = arr.sort().join('')               // 首先进行排序，这样结果会把相同的字符放在一起，然后再转换为字符串\n \nlet value = ''\nlet index = 0\nstr2.replace(/(\\w)\\1*/g, function($0, $1) {         //匹配字符\n  if (index < $0.length) {\n    index = $0.length                   // index是出现次数\n    value = $1                              // value是对应字符\n  }\n})\n \nconsole.log(`最多的字符: ${value} ,重复的次数: ${index}`)          // s   17\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])])}],!1,null,null,null);s.default=n.exports}}]);